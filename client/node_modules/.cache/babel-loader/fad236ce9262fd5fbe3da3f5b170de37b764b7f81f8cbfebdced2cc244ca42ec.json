{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Documents\\\\inquiry_form\\\\client\\\\src\\\\screens\\\\Admin\\\\AdminPayments.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// const AdminPayments = () => {\n//   const [students, setStudents] = useState([]);\n//   const [suggestions, setSuggestions] = useState([]);\n//   const [searchQuery, setSearchQuery] = useState(\"\");\n//   const [paymentFormData, setPaymentFormData] = useState({\n//     studentId: \"\",\n//     amount: \"\",\n//     method: \"Cash\",\n//     description: \"\",\n//   });\n//   const [feeFormData, setFeeFormData] = useState({\n//     studentId: \"\",\n//     total: \"\",\n//     deposit: \"\",\n//     monthly: \"\",\n//     final: \"\",\n//     notes: \"\",\n//   });\n//   const [message, setMessage] = useState(\"\");\n//   const [loading, setLoading] = useState(true);\n//   const [activeTab, setActiveTab] = useState(\"recordPayment\");\n\n//   useEffect(() => {\n//     const fetchStudents = async () => {\n//       try {\n//         const res = await axios.get(\"http://localhost:5000/api/users\");\n//         console.log(\"API Response:\", res.data);\n//         if (Array.isArray(res.data)) {\n//           setStudents(res.data);\n//         } else {\n//           setStudents([]);\n//           setMessage(\"‚ö†Ô∏è Unexpected data format from API.\");\n//         }\n//       } catch (error) {\n//         console.error(\"Error fetching students:\", error);\n//         setMessage(\"‚ùå Failed to load students. Check console for details.\");\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n//     fetchStudents();\n//   }, []);\n\n//   const handleSearchChange = (e, formType) => {\n//     const query = e.target.value.toLowerCase();\n//     setSearchQuery(e.target.value);\n\n//     if (query.length > 0) {\n//       const filtered = students.filter(\n//         (s) =>\n//           s.fullName?.toLowerCase().includes(query) ||\n//           s.email?.toLowerCase().includes(query) ||\n//           `${s.fullName} (${s.email})`.toLowerCase().includes(query)\n//       );\n//       setSuggestions(filtered);\n\n//       if (filtered.length === 1 && \n//           (filtered[0].fullName.toLowerCase() === query ||\n//            filtered[0].email.toLowerCase() === query ||\n//            `${filtered[0].fullName} (${filtered[0].email})`.toLowerCase() === query)) {\n//         if (formType === \"payment\") {\n//           handleSelectStudent(filtered[0], \"payment\");\n//         } else {\n//           handleSelectStudent(filtered[0], \"fee\");\n//         }\n//       }\n//     } else {\n//       setSuggestions([]);\n//       if (formType === \"payment\") {\n//         setPaymentFormData({ ...paymentFormData, studentId: \"\" });\n//       } else {\n//         setFeeFormData({ ...feeFormData, studentId: \"\" });\n//       }\n//     }\n//   };\n\n//   const handleSelectStudent = (student, formType) => {\n//     if (formType === \"payment\") {\n//       setPaymentFormData({ ...paymentFormData, studentId: student._id });\n//       setSearchQuery(`${student.fullName} (${student.email})`);\n//     } else {\n//       setFeeFormData({ ...feeFormData, studentId: student._id });\n//       setSearchQuery(`${student.fullName} (${student.email})`);\n//     }\n//     setSuggestions([]);\n//     console.log(\"Selected student ID:\", student._id);\n//   };\n\n//   const handlePaymentChange = (e) => {\n//     setPaymentFormData({ ...paymentFormData, [e.target.name]: e.target.value });\n//   };\n\n//   const handleFeeChange = (e) => {\n//     setFeeFormData({ ...feeFormData, [e.target.name]: e.target.value });\n//   };\n\n//   const handlePaymentSubmit = async (e) => {\n//     e.preventDefault();\n//     console.log(\"Submitting payment data:\", paymentFormData);\n//     if (!paymentFormData.studentId || !paymentFormData.amount) {\n//       setMessage(\"‚ö†Ô∏è Please select a student and enter an amount.\");\n//       return;\n//     }\n\n//     try {\n//       const res = await axios.post(\"http://localhost:5000/api/payments\", paymentFormData, {\n//         headers: { \"Content-Type\": \"application/json\" },\n//       });\n//       setMessage(\"‚úÖ Payment recorded successfully!\");\n//       setPaymentFormData({\n//         studentId: \"\",\n//         amount: \"\",\n//         method: \"Cash\",\n//         description: \"\",\n//       });\n//       setSearchQuery(\"\");\n//     } catch (error) {\n//       console.error(\"Error saving payment:\", {\n//         message: error.message,\n//         response: error.response ? error.response.data : \"No response\",\n//         status: error.response ? error.response.status : \"No status\",\n//       });\n//       setMessage(\"‚ùå Failed to record payment. Check console for details.\");\n//     }\n//   };\n\n//   const handleFeeSubmit = async (e) => {\n//     e.preventDefault();\n//     console.log(\"Submitting fee data:\", feeFormData);\n//     if (!feeFormData.studentId || !feeFormData.total || !feeFormData.deposit || !feeFormData.monthly || !feeFormData.final) {\n//       setMessage(\"‚ö†Ô∏è Please fill all fee fields.\");\n//       return;\n//     }\n\n//     try {\n//       const res = await axios.post(\"http://localhost:5000/api/payments/assign-fee\", feeFormData, {\n//         headers: { \"Content-Type\": \"application/json\" },\n//       });\n//       setMessage(\"‚úÖ Fee assigned/updated successfully!\");\n//       setFeeFormData({\n//         studentId: \"\",\n//         total: \"\",\n//         deposit: \"\",\n//         monthly: \"\",\n//         final: \"\",\n//         notes: \"\",\n//       });\n//       setSearchQuery(\"\");\n//     } catch (error) {\n//       console.error(\"Error assigning fee:\", {\n//         message: error.message,\n//         response: error.response ? error.response.data : \"No response\",\n//         status: error.response ? error.response.status : \"No status\",\n//       });\n//       setMessage(\"‚ùå Failed to assign fee. Check console for details.\");\n//     }\n//   };\n\n//   return (\n//     <div style={styles.container}>\n//       <h2>üí≥ Admin Payments</h2>\n//       {message && <p style={styles.message}>{message}</p>}\n//       {loading ? (\n//         <p>Loading students...</p>\n//       ) : (\n//         <>\n//           <div style={styles.tabContainer}>\n//             <button\n//               style={activeTab === \"recordPayment\" ? styles.activeTab : styles.tab}\n//               onClick={() => setActiveTab(\"recordPayment\")}\n//             >\n//               Record Payment\n//             </button>\n//             <button\n//               style={activeTab === \"assignFee\" ? styles.activeTab : styles.tab}\n//               onClick={() => setActiveTab(\"assignFee\")}\n//             >\n//               Assign Fee\n//             </button>\n//           </div>\n\n//           {activeTab === \"recordPayment\" ? (\n//             <form onSubmit={handlePaymentSubmit} style={styles.form}>\n//               <div style={{ position: \"relative\", marginBottom: \"15px\" }}>\n//                 <input\n//                   type=\"text\"\n//                   placeholder=\"Search student by name or email\"\n//                   value={searchQuery}\n//                   onChange={(e) => handleSearchChange(e, \"payment\")}\n//                   style={styles.input}\n//                 />\n//                 {suggestions.length > 0 && (\n//                   <ul style={styles.suggestions}>\n//                     {suggestions.map((s) => (\n//                       <li\n//                         key={s._id}\n//                         onClick={() => handleSelectStudent(s, \"payment\")}\n//                         onMouseDown={(e) => e.preventDefault()}\n//                         style={styles.suggestionItem}\n//                       >\n//                         {s.fullName} ({s.email})\n//                       </li>\n//                     ))}\n//                   </ul>\n//                 )}\n//                 {searchQuery.trim() !== \"\" && suggestions.length === 0 && students.length > 0 && (\n//                   <ul style={styles.suggestions}>\n//                     <li style={{ padding: \"8px\", color: \"#888\" }}>\n//                       No students found\n//                     </li>\n//                   </ul>\n//                 )}\n//               </div>\n\n//               <input\n//                 type=\"number\"\n//                 name=\"amount\"\n//                 placeholder=\"Enter amount\"\n//                 value={paymentFormData.amount}\n//                 onChange={handlePaymentChange}\n//                 style={styles.input}\n//                 required\n//                 min=\"0\"\n//               />\n\n//               <select\n//                 name=\"method\"\n//                 value={paymentFormData.method}\n//                 onChange={handlePaymentChange}\n//                 style={styles.input}\n//               >\n//                 <option value=\"Cash\">Cash</option>\n//                 <option value=\"UPI\">UPI</option>\n//                 <option value=\"Card\">Card</option>\n//                 <option value=\"NetBanking\">NetBanking</option>\n//                 <option value=\"Other\">Other</option>\n//               </select>\n\n//               <textarea\n//                 name=\"description\"\n//                 placeholder=\"Description\"\n//                 value={paymentFormData.description}\n//                 onChange={handlePaymentChange}\n//                 style={styles.textarea}\n//               />\n\n//               <button type=\"submit\" style={styles.button}>\n//                 Save Payment\n//               </button>\n//             </form>\n//           ) : (\n//             <form onSubmit={handleFeeSubmit} style={styles.form}>\n//               <div style={{ position: \"relative\", marginBottom: \"15px\" }}>\n//                 <input\n//                   type=\"text\"\n//                   placeholder=\"Search student by name or email\"\n//                   value={searchQuery}\n//                   onChange={(e) => handleSearchChange(e, \"fee\")}\n//                   style={styles.input}\n//                 />\n//                 {suggestions.length > 0 && (\n//                   <ul style={styles.suggestions}>\n//                     {suggestions.map((s) => (\n//                       <li\n//                         key={s._id}\n//                         onClick={() => handleSelectStudent(s, \"fee\")}\n//                         onMouseDown={(e) => e.preventDefault()}\n//                         style={styles.suggestionItem}\n//                       >\n//                         {s.fullName} ({s.email})\n//                       </li>\n//                     ))}\n//                   </ul>\n//                 )}\n//                 {searchQuery.trim() !== \"\" && suggestions.length === 0 && students.length > 0 && (\n//                   <ul style={styles.suggestions}>\n//                     <li style={{ padding: \"8px\", color: \"#888\" }}>\n//                       No students found\n//                     </li>\n//                   </ul>\n//                 )}\n//               </div>\n\n//               <input\n//                 type=\"number\"\n//                 name=\"total\"\n//                 placeholder=\"Total Fee\"\n//                 value={feeFormData.total}\n//                 onChange={handleFeeChange}\n//                 style={styles.input}\n//                 required\n//                 min=\"0\"\n//               />\n//               <input\n//                 type=\"number\"\n//                 name=\"deposit\"\n//                 placeholder=\"Deposit\"\n//                 value={feeFormData.deposit}\n//                 onChange={handleFeeChange}\n//                 style={styles.input}\n//                 required\n//                 min=\"0\"\n//               />\n//               <input\n//                 type=\"number\"\n//                 name=\"monthly\"\n//                 placeholder=\"Monthly Fee\"\n//                 value={feeFormData.monthly}\n//                 onChange={handleFeeChange}\n//                 style={styles.input}\n//                 required\n//                 min=\"0\"\n//               />\n//               <input\n//                 type=\"number\"\n//                 name=\"final\"\n//                 placeholder=\"Final Payment\"\n//                 value={feeFormData.final}\n//                 onChange={handleFeeChange}\n//                 style={styles.input}\n//                 required\n//                 min=\"0\"\n//               />\n//               <textarea\n//                 name=\"notes\"\n//                 placeholder=\"Notes\"\n//                 value={feeFormData.notes}\n//                 onChange={handleFeeChange}\n//                 style={styles.textarea}\n//               />\n\n//               <button type=\"submit\" style={styles.button}>\n//                 Assign Fee\n//               </button>\n//             </form>\n//           )}\n//         </>\n//       )}\n//     </div>\n//   );\n// };\n\n// // Inline CSS\n// const styles = {\n//   container: {\n//     maxWidth: \"500px\",\n//     margin: \"20px auto\",\n//     padding: \"20px\",\n//     border: \"1px solid #ddd\",\n//     borderRadius: \"10px\",\n//     backgroundColor: \"#fafafa\",\n//   },\n//   form: { display: \"flex\", flexDirection: \"column\" },\n//   input: {\n//     padding: \"10px\",\n//     marginBottom: \"10px\",\n//     borderRadius: \"5px\",\n//     border: \"1px solid #ccc\",\n//     width: \"100%\",\n//     boxSizing: \"border-box\",\n//   },\n//   textarea: {\n//     padding: \"10px\",\n//     marginBottom: \"10px\",\n//     borderRadius: \"5px\",\n//     border: \"1px solid #ccc\",\n//     width: \"100\",\n//     minHeight: \"80px\",\n//     boxSizing: \"border-box\",\n//   },\n//   button: {\n//     padding: \"10px\",\n//     background: \"linear-gradient(to right, #6b48ff, #00c4cc)\",\n//     color: \"#fff\",\n//     border: \"none\",\n//     borderRadius: \"5px\",\n//     cursor: \"pointer\",\n//     fontWeight: \"bold\",\n//   },\n//   message: {\n//     margin: \"10px 0\",\n//     fontWeight: \"bold\",\n//     color: \"#dc3545\",\n//   },\n//   suggestions: {\n//     position: \"absolute\",\n//     top: \"100%\",\n//     left: 0,\n//     right: 0,\n//     border: \"1px solid #ccc\",\n//     backgroundColor: \"#fff\",\n//     borderRadius: \"5px\",\n//     listStyle: \"none\",\n//     padding: 0,\n//     margin: 0,\n//     maxHeight: \"150px\",\n//     overflowY: \"auto\",\n//     zIndex: 1000,\n//   },\n//   suggestionItem: {\n//     padding: \"8px\",\n//     cursor: \"pointer\",\n//     \"&:hover\": {\n//       backgroundColor: \"#f0f0f0\",\n//     },\n//   },\n//   tabContainer: {\n//     display: \"flex\",\n//     gap: \"10px\",\n//     marginBottom: \"20px\",\n//   },\n//   tab: {\n//     padding: \"10px\",\n//     background: \"#f0f0f0\",\n//     border: \"none\",\n//     borderRadius: \"5px\",\n//     cursor: \"pointer\",\n//   },\n//   activeTab: {\n//     padding: \"10px\",\n//     background: \"linear-gradient(to right, #6b48ff, #00c4cc)\",\n//     color: \"#fff\",\n//     border: \"none\",\n//     borderRadius: \"5px\",\n//     cursor: \"pointer\",\n//   },\n// };\n\n// export default AdminPayments;\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPayments = () => {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [suggestions, setSuggestions] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [formData, setFormData] = useState({\n    studentId: \"\",\n    total: \"\",\n    deposit: \"\",\n    monthly: \"\",\n    final: \"\",\n    notes: \"\"\n  });\n  const [feeStatus, setFeeStatus] = useState(\"Pending\");\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchStudents = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:5000/api/users\");\n        console.log(\"API Response:\", res.data);\n        if (Array.isArray(res.data)) {\n          setStudents(res.data);\n        } else {\n          setStudents([]);\n          setMessage(\"‚ö†Ô∏è Unexpected data format from API.\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching students:\", error);\n        setMessage(\"‚ùå Failed to load students. Check console for details.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchStudents();\n  }, []);\n  const handleSearchChange = e => {\n    const query = e.target.value.toLowerCase();\n    setSearchQuery(e.target.value);\n    if (query.length > 0) {\n      const filtered = students.filter(s => {\n        var _s$fullName, _s$email;\n        return ((_s$fullName = s.fullName) === null || _s$fullName === void 0 ? void 0 : _s$fullName.toLowerCase().includes(query)) || ((_s$email = s.email) === null || _s$email === void 0 ? void 0 : _s$email.toLowerCase().includes(query)) || `${s.fullName} (${s.email})`.toLowerCase().includes(query);\n      });\n      setSuggestions(filtered);\n      if (filtered.length === 1 && (filtered[0].fullName.toLowerCase() === query || filtered[0].email.toLowerCase() === query || `${filtered[0].fullName} (${filtered[0].email})`.toLowerCase() === query)) {\n        handleSelectStudent(filtered[0]);\n      }\n    } else {\n      setSuggestions([]);\n      setFormData({\n        ...formData,\n        studentId: \"\"\n      });\n      setFeeStatus(\"Pending\");\n    }\n  };\n  const handleSelectStudent = async student => {\n    setFormData({\n      ...formData,\n      studentId: student._id\n    });\n    setSearchQuery(`${student.fullName} (${student.email})`);\n    setSuggestions([]);\n    try {\n      const res = await axios.get(`http://localhost:5000/api/payments/${student._id}`);\n      const data = await res.json();\n      if (data.fees) {\n        setFormData({\n          studentId: student._id,\n          total: data.fees.total || \"\",\n          deposit: data.fees.deposit || \"\",\n          monthly: data.fees.monthly || \"\",\n          final: data.fees.final || \"\",\n          notes: data.fees.notes || \"\"\n        });\n        setFeeStatus(data.fees.status || \"Pending\");\n      } else {\n        setFormData({\n          ...formData,\n          studentId: student._id,\n          total: \"\",\n          deposit: \"\",\n          monthly: \"\",\n          final: \"\",\n          notes: \"\"\n        });\n        setFeeStatus(\"Pending\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching fee status:\", error);\n      setFeeStatus(\"Pending\");\n    }\n  };\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(\"Submitting fee data:\", formData);\n    if (!formData.studentId || !formData.total || !formData.deposit || !formData.monthly || !formData.final) {\n      setMessage(\"‚ö†Ô∏è Please select a student and fill all fee fields.\");\n      return;\n    }\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/payments/assign-fee\", formData, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      setMessage(\"‚úÖ Fee assigned/updated successfully!\");\n      setFeeStatus(res.data.fee.status); // Update status after assignment\n      setTimeout(() => setMessage(\"\"), 3000); // Clear message after 3 seconds\n    } catch (error) {\n      console.error(\"Error assigning fee:\", {\n        message: error.message,\n        response: error.response ? error.response.data : \"No response\",\n        status: error.response ? error.response.status : \"No status\"\n      });\n      setMessage(\"‚ùå Failed to assign fee. Check console for details.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCB3 Manage Student Fees\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: styles.message,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 19\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading students...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: styles.form,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"relative\",\n          marginBottom: \"15px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search student by name or email\",\n          value: searchQuery,\n          onChange: handleSearchChange,\n          style: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 13\n        }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: styles.suggestions,\n          children: suggestions.map(s => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleSelectStudent(s),\n            onMouseDown: e => e.preventDefault(),\n            style: styles.suggestionItem,\n            children: [s.fullName, \" (\", s.email, \")\"]\n          }, s._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 15\n        }, this), searchQuery.trim() !== \"\" && suggestions.length === 0 && students.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: styles.suggestions,\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              padding: \"8px\",\n              color: \"#888\"\n            },\n            children: \"No students found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"total\",\n        placeholder: \"Total Fee\",\n        value: formData.total,\n        onChange: handleChange,\n        style: styles.input,\n        required: true,\n        min: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"deposit\",\n        placeholder: \"Deposit\",\n        value: formData.deposit,\n        onChange: handleChange,\n        style: styles.input,\n        required: true,\n        min: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"monthly\",\n        placeholder: \"Monthly Fee\",\n        value: formData.monthly,\n        onChange: handleChange,\n        style: styles.input,\n        required: true,\n        min: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"final\",\n        placeholder: \"Final Payment\",\n        value: formData.final,\n        onChange: handleChange,\n        style: styles.input,\n        required: true,\n        min: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"notes\",\n        placeholder: \"Notes\",\n        value: formData.notes,\n        onChange: handleChange,\n        style: styles.textarea\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.statusContainer,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Current Fee Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 16\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: styles.status,\n            children: feeStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 53\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: styles.button,\n        children: \"Assign/Update Fee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 558,\n    columnNumber: 5\n  }, this);\n};\n\n// Inline CSS\n_s(AdminPayments, \"JYi9HPmU+GK8XFIS4l7iIWKvXVU=\");\n_c = AdminPayments;\nconst styles = {\n  container: {\n    maxWidth: \"500px\",\n    margin: \"20px auto\",\n    padding: \"20px\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"10px\",\n    backgroundColor: \"#fafafa\"\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  input: {\n    padding: \"10px\",\n    marginBottom: \"10px\",\n    borderRadius: \"5px\",\n    border: \"1px solid #ccc\",\n    width: \"100%\",\n    boxSizing: \"border-box\"\n  },\n  textarea: {\n    padding: \"10px\",\n    marginBottom: \"10px\",\n    borderRadius: \"5px\",\n    border: \"1px solid #ccc\",\n    width: \"100\",\n    minHeight: \"80px\",\n    boxSizing: \"border-box\"\n  },\n  button: {\n    padding: \"10px\",\n    background: \"linear-gradient(to right, #6b48ff, #00c4cc)\",\n    color: \"#fff\",\n    border: \"none\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    fontWeight: \"bold\"\n  },\n  message: {\n    margin: \"10px 0\",\n    fontWeight: \"bold\",\n    color: \"#dc3545\"\n  },\n  suggestions: {\n    position: \"absolute\",\n    top: \"100%\",\n    left: 0,\n    right: 0,\n    border: \"1px solid #ccc\",\n    backgroundColor: \"#fff\",\n    borderRadius: \"5px\",\n    listStyle: \"none\",\n    padding: \"0\",\n    margin: \"0\",\n    maxHeight: \"150px\",\n    overflowY: \"auto\",\n    zIndex: \"1000\"\n  },\n  suggestionItem: {\n    padding: \"8px\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#f0f0f0\"\n    }\n  },\n  statusContainer: {\n    marginBottom: \"15px\",\n    padding: \"10px\",\n    background: \"#f5f6fa\",\n    borderRadius: \"5px\"\n  },\n  status: {\n    padding: \"6px 10px\",\n    borderRadius: \"6px\",\n    fontSize: \"14px\",\n    fontWeight: \"bold\",\n    background: \"#ffeaa7\" // Default for Pending\n  }\n};\nexport default AdminPayments;\nvar _c;\n$RefreshReg$(_c, \"AdminPayments\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AdminPayments","_s","students","setStudents","suggestions","setSuggestions","searchQuery","setSearchQuery","formData","setFormData","studentId","total","deposit","monthly","final","notes","feeStatus","setFeeStatus","message","setMessage","loading","setLoading","fetchStudents","res","get","console","log","data","Array","isArray","error","handleSearchChange","e","query","target","value","toLowerCase","length","filtered","filter","s","_s$fullName","_s$email","fullName","includes","email","handleSelectStudent","student","_id","json","fees","status","handleChange","name","handleSubmit","preventDefault","post","headers","fee","setTimeout","response","style","styles","container","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","form","position","marginBottom","type","placeholder","onChange","input","map","onClick","onMouseDown","suggestionItem","trim","padding","color","required","min","textarea","statusContainer","button","_c","maxWidth","margin","border","borderRadius","backgroundColor","display","flexDirection","width","boxSizing","minHeight","background","cursor","fontWeight","top","left","right","listStyle","maxHeight","overflowY","zIndex","fontSize","$RefreshReg$"],"sources":["C:/Users/Administrator/Documents/inquiry_form/client/src/screens/Admin/AdminPayments.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// const AdminPayments = () => {\r\n//   const [students, setStudents] = useState([]);\r\n//   const [suggestions, setSuggestions] = useState([]);\r\n//   const [searchQuery, setSearchQuery] = useState(\"\");\r\n//   const [paymentFormData, setPaymentFormData] = useState({\r\n//     studentId: \"\",\r\n//     amount: \"\",\r\n//     method: \"Cash\",\r\n//     description: \"\",\r\n//   });\r\n//   const [feeFormData, setFeeFormData] = useState({\r\n//     studentId: \"\",\r\n//     total: \"\",\r\n//     deposit: \"\",\r\n//     monthly: \"\",\r\n//     final: \"\",\r\n//     notes: \"\",\r\n//   });\r\n//   const [message, setMessage] = useState(\"\");\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [activeTab, setActiveTab] = useState(\"recordPayment\");\r\n\r\n//   useEffect(() => {\r\n//     const fetchStudents = async () => {\r\n//       try {\r\n//         const res = await axios.get(\"http://localhost:5000/api/users\");\r\n//         console.log(\"API Response:\", res.data);\r\n//         if (Array.isArray(res.data)) {\r\n//           setStudents(res.data);\r\n//         } else {\r\n//           setStudents([]);\r\n//           setMessage(\"‚ö†Ô∏è Unexpected data format from API.\");\r\n//         }\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching students:\", error);\r\n//         setMessage(\"‚ùå Failed to load students. Check console for details.\");\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n//     fetchStudents();\r\n//   }, []);\r\n\r\n//   const handleSearchChange = (e, formType) => {\r\n//     const query = e.target.value.toLowerCase();\r\n//     setSearchQuery(e.target.value);\r\n\r\n//     if (query.length > 0) {\r\n//       const filtered = students.filter(\r\n//         (s) =>\r\n//           s.fullName?.toLowerCase().includes(query) ||\r\n//           s.email?.toLowerCase().includes(query) ||\r\n//           `${s.fullName} (${s.email})`.toLowerCase().includes(query)\r\n//       );\r\n//       setSuggestions(filtered);\r\n\r\n//       if (filtered.length === 1 && \r\n//           (filtered[0].fullName.toLowerCase() === query ||\r\n//            filtered[0].email.toLowerCase() === query ||\r\n//            `${filtered[0].fullName} (${filtered[0].email})`.toLowerCase() === query)) {\r\n//         if (formType === \"payment\") {\r\n//           handleSelectStudent(filtered[0], \"payment\");\r\n//         } else {\r\n//           handleSelectStudent(filtered[0], \"fee\");\r\n//         }\r\n//       }\r\n//     } else {\r\n//       setSuggestions([]);\r\n//       if (formType === \"payment\") {\r\n//         setPaymentFormData({ ...paymentFormData, studentId: \"\" });\r\n//       } else {\r\n//         setFeeFormData({ ...feeFormData, studentId: \"\" });\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   const handleSelectStudent = (student, formType) => {\r\n//     if (formType === \"payment\") {\r\n//       setPaymentFormData({ ...paymentFormData, studentId: student._id });\r\n//       setSearchQuery(`${student.fullName} (${student.email})`);\r\n//     } else {\r\n//       setFeeFormData({ ...feeFormData, studentId: student._id });\r\n//       setSearchQuery(`${student.fullName} (${student.email})`);\r\n//     }\r\n//     setSuggestions([]);\r\n//     console.log(\"Selected student ID:\", student._id);\r\n//   };\r\n\r\n//   const handlePaymentChange = (e) => {\r\n//     setPaymentFormData({ ...paymentFormData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleFeeChange = (e) => {\r\n//     setFeeFormData({ ...feeFormData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handlePaymentSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     console.log(\"Submitting payment data:\", paymentFormData);\r\n//     if (!paymentFormData.studentId || !paymentFormData.amount) {\r\n//       setMessage(\"‚ö†Ô∏è Please select a student and enter an amount.\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const res = await axios.post(\"http://localhost:5000/api/payments\", paymentFormData, {\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//       });\r\n//       setMessage(\"‚úÖ Payment recorded successfully!\");\r\n//       setPaymentFormData({\r\n//         studentId: \"\",\r\n//         amount: \"\",\r\n//         method: \"Cash\",\r\n//         description: \"\",\r\n//       });\r\n//       setSearchQuery(\"\");\r\n//     } catch (error) {\r\n//       console.error(\"Error saving payment:\", {\r\n//         message: error.message,\r\n//         response: error.response ? error.response.data : \"No response\",\r\n//         status: error.response ? error.response.status : \"No status\",\r\n//       });\r\n//       setMessage(\"‚ùå Failed to record payment. Check console for details.\");\r\n//     }\r\n//   };\r\n\r\n//   const handleFeeSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     console.log(\"Submitting fee data:\", feeFormData);\r\n//     if (!feeFormData.studentId || !feeFormData.total || !feeFormData.deposit || !feeFormData.monthly || !feeFormData.final) {\r\n//       setMessage(\"‚ö†Ô∏è Please fill all fee fields.\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const res = await axios.post(\"http://localhost:5000/api/payments/assign-fee\", feeFormData, {\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//       });\r\n//       setMessage(\"‚úÖ Fee assigned/updated successfully!\");\r\n//       setFeeFormData({\r\n//         studentId: \"\",\r\n//         total: \"\",\r\n//         deposit: \"\",\r\n//         monthly: \"\",\r\n//         final: \"\",\r\n//         notes: \"\",\r\n//       });\r\n//       setSearchQuery(\"\");\r\n//     } catch (error) {\r\n//       console.error(\"Error assigning fee:\", {\r\n//         message: error.message,\r\n//         response: error.response ? error.response.data : \"No response\",\r\n//         status: error.response ? error.response.status : \"No status\",\r\n//       });\r\n//       setMessage(\"‚ùå Failed to assign fee. Check console for details.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={styles.container}>\r\n//       <h2>üí≥ Admin Payments</h2>\r\n//       {message && <p style={styles.message}>{message}</p>}\r\n//       {loading ? (\r\n//         <p>Loading students...</p>\r\n//       ) : (\r\n//         <>\r\n//           <div style={styles.tabContainer}>\r\n//             <button\r\n//               style={activeTab === \"recordPayment\" ? styles.activeTab : styles.tab}\r\n//               onClick={() => setActiveTab(\"recordPayment\")}\r\n//             >\r\n//               Record Payment\r\n//             </button>\r\n//             <button\r\n//               style={activeTab === \"assignFee\" ? styles.activeTab : styles.tab}\r\n//               onClick={() => setActiveTab(\"assignFee\")}\r\n//             >\r\n//               Assign Fee\r\n//             </button>\r\n//           </div>\r\n\r\n//           {activeTab === \"recordPayment\" ? (\r\n//             <form onSubmit={handlePaymentSubmit} style={styles.form}>\r\n//               <div style={{ position: \"relative\", marginBottom: \"15px\" }}>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   placeholder=\"Search student by name or email\"\r\n//                   value={searchQuery}\r\n//                   onChange={(e) => handleSearchChange(e, \"payment\")}\r\n//                   style={styles.input}\r\n//                 />\r\n//                 {suggestions.length > 0 && (\r\n//                   <ul style={styles.suggestions}>\r\n//                     {suggestions.map((s) => (\r\n//                       <li\r\n//                         key={s._id}\r\n//                         onClick={() => handleSelectStudent(s, \"payment\")}\r\n//                         onMouseDown={(e) => e.preventDefault()}\r\n//                         style={styles.suggestionItem}\r\n//                       >\r\n//                         {s.fullName} ({s.email})\r\n//                       </li>\r\n//                     ))}\r\n//                   </ul>\r\n//                 )}\r\n//                 {searchQuery.trim() !== \"\" && suggestions.length === 0 && students.length > 0 && (\r\n//                   <ul style={styles.suggestions}>\r\n//                     <li style={{ padding: \"8px\", color: \"#888\" }}>\r\n//                       No students found\r\n//                     </li>\r\n//                   </ul>\r\n//                 )}\r\n//               </div>\r\n\r\n//               <input\r\n//                 type=\"number\"\r\n//                 name=\"amount\"\r\n//                 placeholder=\"Enter amount\"\r\n//                 value={paymentFormData.amount}\r\n//                 onChange={handlePaymentChange}\r\n//                 style={styles.input}\r\n//                 required\r\n//                 min=\"0\"\r\n//               />\r\n\r\n//               <select\r\n//                 name=\"method\"\r\n//                 value={paymentFormData.method}\r\n//                 onChange={handlePaymentChange}\r\n//                 style={styles.input}\r\n//               >\r\n//                 <option value=\"Cash\">Cash</option>\r\n//                 <option value=\"UPI\">UPI</option>\r\n//                 <option value=\"Card\">Card</option>\r\n//                 <option value=\"NetBanking\">NetBanking</option>\r\n//                 <option value=\"Other\">Other</option>\r\n//               </select>\r\n\r\n//               <textarea\r\n//                 name=\"description\"\r\n//                 placeholder=\"Description\"\r\n//                 value={paymentFormData.description}\r\n//                 onChange={handlePaymentChange}\r\n//                 style={styles.textarea}\r\n//               />\r\n\r\n//               <button type=\"submit\" style={styles.button}>\r\n//                 Save Payment\r\n//               </button>\r\n//             </form>\r\n//           ) : (\r\n//             <form onSubmit={handleFeeSubmit} style={styles.form}>\r\n//               <div style={{ position: \"relative\", marginBottom: \"15px\" }}>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   placeholder=\"Search student by name or email\"\r\n//                   value={searchQuery}\r\n//                   onChange={(e) => handleSearchChange(e, \"fee\")}\r\n//                   style={styles.input}\r\n//                 />\r\n//                 {suggestions.length > 0 && (\r\n//                   <ul style={styles.suggestions}>\r\n//                     {suggestions.map((s) => (\r\n//                       <li\r\n//                         key={s._id}\r\n//                         onClick={() => handleSelectStudent(s, \"fee\")}\r\n//                         onMouseDown={(e) => e.preventDefault()}\r\n//                         style={styles.suggestionItem}\r\n//                       >\r\n//                         {s.fullName} ({s.email})\r\n//                       </li>\r\n//                     ))}\r\n//                   </ul>\r\n//                 )}\r\n//                 {searchQuery.trim() !== \"\" && suggestions.length === 0 && students.length > 0 && (\r\n//                   <ul style={styles.suggestions}>\r\n//                     <li style={{ padding: \"8px\", color: \"#888\" }}>\r\n//                       No students found\r\n//                     </li>\r\n//                   </ul>\r\n//                 )}\r\n//               </div>\r\n\r\n//               <input\r\n//                 type=\"number\"\r\n//                 name=\"total\"\r\n//                 placeholder=\"Total Fee\"\r\n//                 value={feeFormData.total}\r\n//                 onChange={handleFeeChange}\r\n//                 style={styles.input}\r\n//                 required\r\n//                 min=\"0\"\r\n//               />\r\n//               <input\r\n//                 type=\"number\"\r\n//                 name=\"deposit\"\r\n//                 placeholder=\"Deposit\"\r\n//                 value={feeFormData.deposit}\r\n//                 onChange={handleFeeChange}\r\n//                 style={styles.input}\r\n//                 required\r\n//                 min=\"0\"\r\n//               />\r\n//               <input\r\n//                 type=\"number\"\r\n//                 name=\"monthly\"\r\n//                 placeholder=\"Monthly Fee\"\r\n//                 value={feeFormData.monthly}\r\n//                 onChange={handleFeeChange}\r\n//                 style={styles.input}\r\n//                 required\r\n//                 min=\"0\"\r\n//               />\r\n//               <input\r\n//                 type=\"number\"\r\n//                 name=\"final\"\r\n//                 placeholder=\"Final Payment\"\r\n//                 value={feeFormData.final}\r\n//                 onChange={handleFeeChange}\r\n//                 style={styles.input}\r\n//                 required\r\n//                 min=\"0\"\r\n//               />\r\n//               <textarea\r\n//                 name=\"notes\"\r\n//                 placeholder=\"Notes\"\r\n//                 value={feeFormData.notes}\r\n//                 onChange={handleFeeChange}\r\n//                 style={styles.textarea}\r\n//               />\r\n\r\n//               <button type=\"submit\" style={styles.button}>\r\n//                 Assign Fee\r\n//               </button>\r\n//             </form>\r\n//           )}\r\n//         </>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// // Inline CSS\r\n// const styles = {\r\n//   container: {\r\n//     maxWidth: \"500px\",\r\n//     margin: \"20px auto\",\r\n//     padding: \"20px\",\r\n//     border: \"1px solid #ddd\",\r\n//     borderRadius: \"10px\",\r\n//     backgroundColor: \"#fafafa\",\r\n//   },\r\n//   form: { display: \"flex\", flexDirection: \"column\" },\r\n//   input: {\r\n//     padding: \"10px\",\r\n//     marginBottom: \"10px\",\r\n//     borderRadius: \"5px\",\r\n//     border: \"1px solid #ccc\",\r\n//     width: \"100%\",\r\n//     boxSizing: \"border-box\",\r\n//   },\r\n//   textarea: {\r\n//     padding: \"10px\",\r\n//     marginBottom: \"10px\",\r\n//     borderRadius: \"5px\",\r\n//     border: \"1px solid #ccc\",\r\n//     width: \"100\",\r\n//     minHeight: \"80px\",\r\n//     boxSizing: \"border-box\",\r\n//   },\r\n//   button: {\r\n//     padding: \"10px\",\r\n//     background: \"linear-gradient(to right, #6b48ff, #00c4cc)\",\r\n//     color: \"#fff\",\r\n//     border: \"none\",\r\n//     borderRadius: \"5px\",\r\n//     cursor: \"pointer\",\r\n//     fontWeight: \"bold\",\r\n//   },\r\n//   message: {\r\n//     margin: \"10px 0\",\r\n//     fontWeight: \"bold\",\r\n//     color: \"#dc3545\",\r\n//   },\r\n//   suggestions: {\r\n//     position: \"absolute\",\r\n//     top: \"100%\",\r\n//     left: 0,\r\n//     right: 0,\r\n//     border: \"1px solid #ccc\",\r\n//     backgroundColor: \"#fff\",\r\n//     borderRadius: \"5px\",\r\n//     listStyle: \"none\",\r\n//     padding: 0,\r\n//     margin: 0,\r\n//     maxHeight: \"150px\",\r\n//     overflowY: \"auto\",\r\n//     zIndex: 1000,\r\n//   },\r\n//   suggestionItem: {\r\n//     padding: \"8px\",\r\n//     cursor: \"pointer\",\r\n//     \"&:hover\": {\r\n//       backgroundColor: \"#f0f0f0\",\r\n//     },\r\n//   },\r\n//   tabContainer: {\r\n//     display: \"flex\",\r\n//     gap: \"10px\",\r\n//     marginBottom: \"20px\",\r\n//   },\r\n//   tab: {\r\n//     padding: \"10px\",\r\n//     background: \"#f0f0f0\",\r\n//     border: \"none\",\r\n//     borderRadius: \"5px\",\r\n//     cursor: \"pointer\",\r\n//   },\r\n//   activeTab: {\r\n//     padding: \"10px\",\r\n//     background: \"linear-gradient(to right, #6b48ff, #00c4cc)\",\r\n//     color: \"#fff\",\r\n//     border: \"none\",\r\n//     borderRadius: \"5px\",\r\n//     cursor: \"pointer\",\r\n//   },\r\n// };\r\n\r\n// export default AdminPayments;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst AdminPayments = () => {\r\n  const [students, setStudents] = useState([]);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [formData, setFormData] = useState({\r\n    studentId: \"\",\r\n    total: \"\",\r\n    deposit: \"\",\r\n    monthly: \"\",\r\n    final: \"\",\r\n    notes: \"\",\r\n  });\r\n  const [feeStatus, setFeeStatus] = useState(\"Pending\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchStudents = async () => {\r\n      try {\r\n        const res = await axios.get(\"http://localhost:5000/api/users\");\r\n        console.log(\"API Response:\", res.data);\r\n        if (Array.isArray(res.data)) {\r\n          setStudents(res.data);\r\n        } else {\r\n          setStudents([]);\r\n          setMessage(\"‚ö†Ô∏è Unexpected data format from API.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching students:\", error);\r\n        setMessage(\"‚ùå Failed to load students. Check console for details.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchStudents();\r\n  }, []);\r\n\r\n  const handleSearchChange = (e) => {\r\n    const query = e.target.value.toLowerCase();\r\n    setSearchQuery(e.target.value);\r\n\r\n    if (query.length > 0) {\r\n      const filtered = students.filter(\r\n        (s) =>\r\n          s.fullName?.toLowerCase().includes(query) ||\r\n          s.email?.toLowerCase().includes(query) ||\r\n          `${s.fullName} (${s.email})`.toLowerCase().includes(query)\r\n      );\r\n      setSuggestions(filtered);\r\n\r\n      if (filtered.length === 1 && \r\n          (filtered[0].fullName.toLowerCase() === query ||\r\n           filtered[0].email.toLowerCase() === query ||\r\n           `${filtered[0].fullName} (${filtered[0].email})`.toLowerCase() === query)) {\r\n        handleSelectStudent(filtered[0]);\r\n      }\r\n    } else {\r\n      setSuggestions([]);\r\n      setFormData({ ...formData, studentId: \"\" });\r\n      setFeeStatus(\"Pending\");\r\n    }\r\n  };\r\n\r\n  const handleSelectStudent = async (student) => {\r\n    setFormData({ ...formData, studentId: student._id });\r\n    setSearchQuery(`${student.fullName} (${student.email})`);\r\n    setSuggestions([]);\r\n\r\n    try {\r\n      const res = await axios.get(`http://localhost:5000/api/payments/${student._id}`);\r\n      const data = await res.json();\r\n      if (data.fees) {\r\n        setFormData({\r\n          studentId: student._id,\r\n          total: data.fees.total || \"\",\r\n          deposit: data.fees.deposit || \"\",\r\n          monthly: data.fees.monthly || \"\",\r\n          final: data.fees.final || \"\",\r\n          notes: data.fees.notes || \"\",\r\n        });\r\n        setFeeStatus(data.fees.status || \"Pending\");\r\n      } else {\r\n        setFormData({ ...formData, studentId: student._id, total: \"\", deposit: \"\", monthly: \"\", final: \"\", notes: \"\" });\r\n        setFeeStatus(\"Pending\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching fee status:\", error);\r\n      setFeeStatus(\"Pending\");\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(\"Submitting fee data:\", formData);\r\n    if (!formData.studentId || !formData.total || !formData.deposit || !formData.monthly || !formData.final) {\r\n      setMessage(\"‚ö†Ô∏è Please select a student and fill all fee fields.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await axios.post(\"http://localhost:5000/api/payments/assign-fee\", formData, {\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      });\r\n      setMessage(\"‚úÖ Fee assigned/updated successfully!\");\r\n      setFeeStatus(res.data.fee.status); // Update status after assignment\r\n      setTimeout(() => setMessage(\"\"), 3000); // Clear message after 3 seconds\r\n    } catch (error) {\r\n      console.error(\"Error assigning fee:\", {\r\n        message: error.message,\r\n        response: error.response ? error.response.data : \"No response\",\r\n        status: error.response ? error.response.status : \"No status\",\r\n      });\r\n      setMessage(\"‚ùå Failed to assign fee. Check console for details.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <h2>üí≥ Manage Student Fees</h2>\r\n      {message && <p style={styles.message}>{message}</p>}\r\n      {loading ? (\r\n        <p>Loading students...</p>\r\n      ) : (\r\n        <form onSubmit={handleSubmit} style={styles.form}>\r\n          <div style={{ position: \"relative\", marginBottom: \"15px\" }}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search student by name or email\"\r\n              value={searchQuery}\r\n              onChange={handleSearchChange}\r\n              style={styles.input}\r\n            />\r\n            {suggestions.length > 0 && (\r\n              <ul style={styles.suggestions}>\r\n                {suggestions.map((s) => (\r\n                  <li\r\n                    key={s._id}\r\n                    onClick={() => handleSelectStudent(s)}\r\n                    onMouseDown={(e) => e.preventDefault()}\r\n                    style={styles.suggestionItem}\r\n                  >\r\n                    {s.fullName} ({s.email})\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n            {searchQuery.trim() !== \"\" && suggestions.length === 0 && students.length > 0 && (\r\n              <ul style={styles.suggestions}>\r\n                <li style={{ padding: \"8px\", color: \"#888\" }}>\r\n                  No students found\r\n                </li>\r\n              </ul>\r\n            )}\r\n          </div>\r\n\r\n          <input\r\n            type=\"number\"\r\n            name=\"total\"\r\n            placeholder=\"Total Fee\"\r\n            value={formData.total}\r\n            onChange={handleChange}\r\n            style={styles.input}\r\n            required\r\n            min=\"0\"\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            name=\"deposit\"\r\n            placeholder=\"Deposit\"\r\n            value={formData.deposit}\r\n            onChange={handleChange}\r\n            style={styles.input}\r\n            required\r\n            min=\"0\"\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            name=\"monthly\"\r\n            placeholder=\"Monthly Fee\"\r\n            value={formData.monthly}\r\n            onChange={handleChange}\r\n            style={styles.input}\r\n            required\r\n            min=\"0\"\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            name=\"final\"\r\n            placeholder=\"Final Payment\"\r\n            value={formData.final}\r\n            onChange={handleChange}\r\n            style={styles.input}\r\n            required\r\n            min=\"0\"\r\n          />\r\n          <textarea\r\n            name=\"notes\"\r\n            placeholder=\"Notes\"\r\n            value={formData.notes}\r\n            onChange={handleChange}\r\n            style={styles.textarea}\r\n          />\r\n\r\n          <div style={styles.statusContainer}>\r\n            <p><strong>Current Fee Status:</strong> <span style={styles.status}>{feeStatus}</span></p>\r\n          </div>\r\n\r\n          <button type=\"submit\" style={styles.button}>\r\n            Assign/Update Fee\r\n          </button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Inline CSS\r\nconst styles = {\r\n  container: {\r\n    maxWidth: \"500px\",\r\n    margin: \"20px auto\",\r\n    padding: \"20px\",\r\n    border: \"1px solid #ddd\",\r\n    borderRadius: \"10px\",\r\n    backgroundColor: \"#fafafa\",\r\n  },\r\n  form: { display: \"flex\", flexDirection: \"column\" },\r\n  input: {\r\n    padding: \"10px\",\r\n    marginBottom: \"10px\",\r\n    borderRadius: \"5px\",\r\n    border: \"1px solid #ccc\",\r\n    width: \"100%\",\r\n    boxSizing: \"border-box\",\r\n  },\r\n  textarea: {\r\n    padding: \"10px\",\r\n    marginBottom: \"10px\",\r\n    borderRadius: \"5px\",\r\n    border: \"1px solid #ccc\",\r\n    width: \"100\",\r\n    minHeight: \"80px\",\r\n    boxSizing: \"border-box\",\r\n  },\r\n  button: {\r\n    padding: \"10px\",\r\n    background: \"linear-gradient(to right, #6b48ff, #00c4cc)\",\r\n    color: \"#fff\",\r\n    border: \"none\",\r\n    borderRadius: \"5px\",\r\n    cursor: \"pointer\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  message: {\r\n    margin: \"10px 0\",\r\n    fontWeight: \"bold\",\r\n    color: \"#dc3545\",\r\n  },\r\n  suggestions: {\r\n    position: \"absolute\",\r\n    top: \"100%\",\r\n    left: 0,\r\n    right: 0,\r\n    border: \"1px solid #ccc\",\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: \"5px\",\r\n    listStyle: \"none\",\r\n    padding: \"0\",\r\n    margin: \"0\",\r\n    maxHeight: \"150px\",\r\n    overflowY: \"auto\",\r\n    zIndex: \"1000\",\r\n  },\r\n  suggestionItem: {\r\n    padding: \"8px\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#f0f0f0\",\r\n    },\r\n  },\r\n  statusContainer: {\r\n    marginBottom: \"15px\",\r\n    padding: \"10px\",\r\n    background: \"#f5f6fa\",\r\n    borderRadius: \"5px\",\r\n  },\r\n  status: {\r\n    padding: \"6px 10px\",\r\n    borderRadius: \"6px\",\r\n    fontSize: \"14px\",\r\n    fontWeight: \"bold\",\r\n    background: \"#ffeaa7\", // Default for Pending\r\n  },\r\n};\r\n\r\nexport default AdminPayments;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}