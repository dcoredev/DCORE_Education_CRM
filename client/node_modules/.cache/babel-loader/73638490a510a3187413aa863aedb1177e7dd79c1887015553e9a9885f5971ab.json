{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Documents\\\\inquiry_form\\\\client\\\\src\\\\screens\\\\Admin\\\\AdminPayments.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// const AdminPayments = () => {\n//   const [students, setStudents] = useState([]);\n//   const [suggestions, setSuggestions] = useState([]);\n//   const [searchQuery, setSearchQuery] = useState(\"\");\n//   const [formData, setFormData] = useState({\n//     studentId: \"\",\n//     total: \"\",\n//     deposit: \"\",\n//     monthly: \"\",\n//     final: \"\",\n//     notes: \"\",\n//   });\n//   const [feeStatus, setFeeStatus] = useState(\"Pending\");\n//   const [message, setMessage] = useState(\"\");\n//   const [loading, setLoading] = useState(true);\n\n//   // Fetch users (students) from backend\n//   useEffect(() => {\n//     const fetchStudents = async () => {\n//       try {\n//         const res = await axios.get(\"http://localhost:5000/api/users\");\n//         console.log(\"API Response:\", res.data);\n//         if (Array.isArray(res.data)) {\n//           setStudents(res.data);\n//         } else {\n//           setStudents([]);\n//           setMessage(\"‚ö†Ô∏è Unexpected data format from API.\");\n//         }\n//       } catch (error) {\n//         console.error(\"Error fetching students:\", error);\n//         setMessage(\"‚ùå Failed to load students. Check console for details.\");\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n//     fetchStudents();\n//   }, []);\n\n//   // Handle live search\n//   const handleSearchChange = (e) => {\n//     const query = e.target.value.toLowerCase();\n//     setSearchQuery(e.target.value);\n\n//     if (query.length > 0) {\n//       const filtered = students.filter(\n//         (s) =>\n//           s.fullName?.toLowerCase().includes(query) ||\n//           s.email?.toLowerCase().includes(query) ||\n//           `${s.fullName} (${s.email})`.toLowerCase().includes(query)\n//       );\n//       setSuggestions(filtered);\n//     } else {\n//       setSuggestions([]);\n//       setFormData({ ...formData, studentId: \"\" });\n//       setFeeStatus(\"Pending\");\n//     }\n//   };\n\n//   // Handle student selection\n//   const handleSelectStudent = async (student) => {\n//     setSearchQuery(`${student.fullName} (${student.email})`);\n//     setFormData(prev => ({ ...prev, studentId: student._id }));\n//     setSuggestions([]);\n\n//     try {\n//       const res = await axios.get(`http://localhost:5000/api/payments/${student._id}`);\n//       const data = res.data;\n\n//       if (data.fees) {\n//         setFormData({\n//           studentId: student._id,\n//           total: data.fees.total || \"\",\n//           deposit: data.fees.deposit || \"\",\n//           monthly: data.fees.monthly || \"\",\n//           final: data.fees.final || \"\",\n//           notes: data.fees.notes || \"\",\n//         });\n//         setFeeStatus(data.fees.status || \"Pending\");\n//       } else {\n//         setFormData({\n//           studentId: student._id,\n//           total: \"\",\n//           deposit: \"\",\n//           monthly: \"\",\n//           final: \"\",\n//           notes: \"\",\n//         });\n//         setFeeStatus(\"Pending\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error fetching fee status:\", error);\n//       setFeeStatus(\"Pending\");\n//     }\n//   };\n\n//   // Handle field changes\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   // Handle fee assignment\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     console.log(\"Submitting fee data:\", formData);\n\n//     if (!formData.studentId || !formData.total || !formData.deposit || !formData.monthly || !formData.final) {\n//       setMessage(\"‚ö†Ô∏è Please select a student and fill all fee fields.\");\n//       return;\n//     }\n\n//     try {\n//       const res = await axios.post(\"http://localhost:5000/api/payments/assign-fee\", formData, {\n//         headers: { \"Content-Type\": \"application/json\" },\n//       });\n//       setMessage(\"‚úÖ Fee assigned/updated successfully!\");\n//       setFeeStatus(res.data.fee?.status || \"Updated\");\n//       setTimeout(() => setMessage(\"\"), 3000);\n//     } catch (error) {\n//       console.error(\"Error assigning fee:\", {\n//         message: error.message,\n//         response: error.response ? error.response.data : \"No response\",\n//         status: error.response ? error.response.status : \"No status\",\n//       });\n//       setMessage(\"‚ùå Failed to assign fee. Check console for details.\");\n//     }\n//   };\n\n//   return (\n//     <div style={styles.container}>\n//       <h2>üí≥ Manage Student Fees</h2>\n//       {message && <p style={styles.message}>{message}</p>}\n//       {loading ? (\n//         <p>Loading students...</p>\n//       ) : (\n//         <form onSubmit={handleSubmit} style={styles.form}>\n//           {/* Student Search */}\n//           <div style={{ position: \"relative\", marginBottom: \"15px\" }}>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search student by name or email\"\n//               value={searchQuery}\n//               onChange={handleSearchChange}\n//               style={styles.input}\n//             />\n//             {suggestions.length > 0 && (\n//               <ul style={styles.suggestions}>\n//                 {suggestions.map((s) => (\n//                   <li\n//                     key={s._id}\n//                     onClick={() => handleSelectStudent(s)}\n//                     onMouseDown={(e) => e.preventDefault()}\n//                     style={styles.suggestionItem}\n//                   >\n//                     {s.fullName} ({s.email})\n//                   </li>\n//                 ))}\n//               </ul>\n//             )}\n//             {searchQuery.trim() !== \"\" && suggestions.length === 0 && students.length > 0 && (\n//               <ul style={styles.suggestions}>\n//                 <li style={{ padding: \"8px\", color: \"#888\" }}>No students found</li>\n//               </ul>\n//             )}\n//           </div>\n\n//           {/* Fee Fields */}\n//           <input\n//             type=\"number\"\n//             name=\"total\"\n//             placeholder=\"Total Fee\"\n//             value={formData.total}\n//             onChange={handleChange}\n//             style={styles.input}\n//             required\n//             min=\"0\"\n//           />\n//           <input\n//             type=\"number\"\n//             name=\"deposit\"\n//             placeholder=\"Deposit\"\n//             value={formData.deposit}\n//             onChange={handleChange}\n//             style={styles.input}\n//             required\n//             min=\"0\"\n//           />\n//           <input\n//             type=\"number\"\n//             name=\"monthly\"\n//             placeholder=\"Monthly Fee\"\n//             value={formData.monthly}\n//             onChange={handleChange}\n//             style={styles.input}\n//             required\n//             min=\"0\"\n//           />\n//           <input\n//             type=\"number\"\n//             name=\"final\"\n//             placeholder=\"Final Payment\"\n//             value={formData.final}\n//             onChange={handleChange}\n//             style={styles.input}\n//             required\n//             min=\"0\"\n//           />\n//           <textarea\n//             name=\"notes\"\n//             placeholder=\"Notes\"\n//             value={formData.notes}\n//             onChange={handleChange}\n//             style={styles.textarea}\n//           />\n\n//           {/* Fee Status */}\n//           <div style={styles.statusContainer}>\n//             <p>\n//               <strong>Current Fee Status:</strong>{\" \"}\n//               <span style={styles.status}>{feeStatus}</span>\n//             </p>\n//           </div>\n\n//           <button type=\"submit\" style={styles.button}>\n//             Assign/Update Fee\n//           </button>\n//         </form>\n//       )}\n//     </div>\n//   );\n// };\n\n// // Inline CSS\n// const styles = {\n//   container: {\n//     maxWidth: \"500px\",\n//     margin: \"20px auto\",\n//     padding: \"20px\",\n//     border: \"1px solid #ddd\",\n//     borderRadius: \"10px\",\n//     backgroundColor: \"#fafafa\",\n//   },\n//   form: { display: \"flex\", flexDirection: \"column\" },\n//   input: {\n//     padding: \"10px\",\n//     marginBottom: \"10px\",\n//     borderRadius: \"5px\",\n//     border: \"1px solid #ccc\",\n//     width: \"100%\",\n//     boxSizing: \"border-box\",\n//   },\n//   textarea: {\n//     padding: \"10px\",\n//     marginBottom: \"10px\",\n//     borderRadius: \"5px\",\n//     border: \"1px solid #ccc\",\n//     width: \"100%\",\n//     minHeight: \"80px\",\n//     boxSizing: \"border-box\",\n//   },\n//   button: {\n//     padding: \"10px\",\n//     background: \"linear-gradient(to right, #6b48ff, #00c4cc)\",\n//     color: \"#fff\",\n//     border: \"none\",\n//     borderRadius: \"5px\",\n//     cursor: \"pointer\",\n//     fontWeight: \"bold\",\n//   },\n//   message: {\n//     margin: \"10px 0\",\n//     fontWeight: \"bold\",\n//     color: \"#dc3545\",\n//   },\n//   suggestions: {\n//     position: \"absolute\",\n//     top: \"100%\",\n//     left: 0,\n//     right: 0,\n//     border: \"1px solid #ccc\",\n//     backgroundColor: \"#fff\",\n//     borderRadius: \"5px\",\n//     listStyle: \"none\",\n//     padding: \"0\",\n//     margin: \"0\",\n//     maxHeight: \"150px\",\n//     overflowY: \"auto\",\n//     zIndex: \"1000\",\n//   },\n//   suggestionItem: {\n//     padding: \"8px\",\n//     cursor: \"pointer\",\n//   },\n//   statusContainer: {\n//     marginBottom: \"15px\",\n//     padding: \"10px\",\n//     background: \"#f5f6fa\",\n//     borderRadius: \"5px\",\n//   },\n//   status: {\n//     padding: \"6px 10px\",\n//     borderRadius: \"6px\",\n//     fontSize: \"14px\",\n//     fontWeight: \"bold\",\n//     background: \"#ffeaa7\",\n//   },\n// };\n\n// export default AdminPayments;\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPayments = () => {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [suggestions, setSuggestions] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [formData, setFormData] = useState({\n    studentId: \"\",\n    total: \"\",\n    deposit: \"\",\n    monthly: \"\",\n    final: \"\",\n    notes: \"\"\n  });\n  const [feeStatus, setFeeStatus] = useState(\"Pending\");\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  // Fetch all students\n  useEffect(() => {\n    const fetchStudents = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:5000/api/users\");\n        const data = Array.isArray(res.data) ? res.data : res.data.users || [];\n        setStudents(data);\n      } catch (err) {\n        console.error(\"Error fetching students:\", err);\n        setMessage(\"‚ùå Failed to load students.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchStudents();\n  }, []);\n\n  // Handle search input change\n  const handleSearchChange = e => {\n    const query = e.target.value;\n    setSearchQuery(query);\n    if (!query) {\n      setSuggestions([]);\n      setFormData(prev => ({\n        ...prev,\n        studentId: \"\"\n      }));\n      setFeeStatus(\"Pending\");\n      return;\n    }\n    const filtered = students.filter(s => {\n      var _s$fullName, _s$email;\n      return ((_s$fullName = s.fullName) === null || _s$fullName === void 0 ? void 0 : _s$fullName.toLowerCase().includes(query.toLowerCase())) || ((_s$email = s.email) === null || _s$email === void 0 ? void 0 : _s$email.toLowerCase().includes(query.toLowerCase()));\n    });\n    setSuggestions(filtered);\n  };\n\n  // Handle student selection\n  const handleSelectStudent = async student => {\n    setSearchQuery(`${student.fullName} (${student.email})`);\n    setFormData(prev => ({\n      ...prev,\n      studentId: student._id\n    }));\n    setSuggestions([]);\n    try {\n      const res = await axios.get(`http://localhost:5000/api/payments/${student._id}`);\n      const data = res.data;\n      if (data.fees) {\n        setFormData({\n          studentId: student._id,\n          total: data.fees.total || \"\",\n          deposit: data.fees.deposit || \"\",\n          monthly: data.fees.monthly || \"\",\n          final: data.fees.final || \"\",\n          notes: data.fees.notes || \"\"\n        });\n        setFeeStatus(data.fees.status || \"Pending\");\n      } else {\n        setFormData({\n          studentId: student._id,\n          total: \"\",\n          deposit: \"\",\n          monthly: \"\",\n          final: \"\",\n          notes: \"\"\n        });\n        setFeeStatus(\"Pending\");\n      }\n    } catch (err) {\n      console.error(\"Error fetching fee info:\", err);\n      setFeeStatus(\"Pending\");\n    }\n  };\n\n  // Handle field changes\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Assign / update fee\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!formData.studentId || !formData.total || !formData.deposit || !formData.monthly || !formData.final) {\n      setMessage(\"‚ö†Ô∏è Please select a student and fill all fee fields.\");\n      return;\n    }\n    try {\n      var _res$data$fee;\n      const res = await axios.post(\"http://localhost:5000/api/payments/assign-fee\", formData);\n      setMessage(\"‚úÖ Fee assigned/updated successfully!\");\n      setFeeStatus(((_res$data$fee = res.data.fee) === null || _res$data$fee === void 0 ? void 0 : _res$data$fee.status) || \"Updated\");\n      setTimeout(() => setMessage(\"\"), 3000);\n    } catch (err) {\n      console.error(\"Error assigning fee:\", err);\n      setMessage(\"‚ùå Failed to assign fee. Check console.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCB3 Manage Student Fees\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: styles.message,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 19\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading students...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: styles.form,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"relative\",\n          marginBottom: \"15px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search student by name/email\",\n          value: searchQuery,\n          onChange: handleSearchChange,\n          style: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 13\n        }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: styles.suggestions,\n          children: suggestions.map(s => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleSelectStudent(s),\n            onMouseDown: e => e.preventDefault(),\n            style: styles.suggestionItem,\n            children: [s.fullName, \" (\", s.email, \")\"]\n          }, s._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"total\",\n        placeholder: \"Total Fee\",\n        value: formData.total,\n        onChange: handleChange,\n        style: styles.input,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"deposit\",\n        placeholder: \"Deposit\",\n        value: formData.deposit,\n        onChange: handleChange,\n        style: styles.input,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"monthly\",\n        placeholder: \"Monthly Fee\",\n        value: formData.monthly,\n        onChange: handleChange,\n        style: styles.input,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"final\",\n        placeholder: \"Final Payment\",\n        value: formData.final,\n        onChange: handleChange,\n        style: styles.input,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"notes\",\n        placeholder: \"Notes\",\n        value: formData.notes,\n        onChange: handleChange,\n        style: styles.textarea\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.statusContainer,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Current Fee Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: styles.status,\n            children: feeStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 52\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: styles.button,\n        children: \"Assign/Update Fee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 433,\n    columnNumber: 5\n  }, this);\n};\n\n// Inline CSS\n_s(AdminPayments, \"JYi9HPmU+GK8XFIS4l7iIWKvXVU=\");\n_c = AdminPayments;\nconst styles = {\n  container: {\n    maxWidth: \"500px\",\n    margin: \"20px auto\",\n    padding: \"20px\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"10px\",\n    backgroundColor: \"#fafafa\"\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  input: {\n    padding: \"10px\",\n    marginBottom: \"10px\",\n    borderRadius: \"5px\",\n    border: \"1px solid #ccc\",\n    width: \"100%\"\n  },\n  textarea: {\n    padding: \"10px\",\n    marginBottom: \"10px\",\n    borderRadius: \"5px\",\n    border: \"1px solid #ccc\",\n    width: \"100%\",\n    minHeight: \"80px\"\n  },\n  button: {\n    padding: \"10px\",\n    background: \"linear-gradient(to right, #6b48ff, #00c4cc)\",\n    color: \"#fff\",\n    border: \"none\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    fontWeight: \"bold\"\n  },\n  message: {\n    margin: \"10px 0\",\n    fontWeight: \"bold\",\n    color: \"#dc3545\"\n  },\n  suggestions: {\n    position: \"absolute\",\n    top: \"100%\",\n    left: 0,\n    right: 0,\n    border: \"1px solid #ccc\",\n    backgroundColor: \"#fff\",\n    borderRadius: \"5px\",\n    listStyle: \"none\",\n    padding: 0,\n    margin: 0,\n    maxHeight: \"150px\",\n    overflowY: \"auto\",\n    zIndex: 1000\n  },\n  suggestionItem: {\n    padding: \"8px\",\n    cursor: \"pointer\"\n  },\n  statusContainer: {\n    marginBottom: \"15px\",\n    padding: \"10px\",\n    background: \"#f5f6fa\",\n    borderRadius: \"5px\"\n  },\n  status: {\n    padding: \"6px 10px\",\n    borderRadius: \"6px\",\n    fontSize: \"14px\",\n    fontWeight: \"bold\",\n    background: \"#ffeaa7\"\n  }\n};\nexport default AdminPayments;\nvar _c;\n$RefreshReg$(_c, \"AdminPayments\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AdminPayments","_s","students","setStudents","suggestions","setSuggestions","searchQuery","setSearchQuery","formData","setFormData","studentId","total","deposit","monthly","final","notes","feeStatus","setFeeStatus","message","setMessage","loading","setLoading","fetchStudents","res","get","data","Array","isArray","users","err","console","error","handleSearchChange","e","query","target","value","prev","filtered","filter","s","_s$fullName","_s$email","fullName","toLowerCase","includes","email","handleSelectStudent","student","_id","fees","status","handleChange","name","handleSubmit","preventDefault","_res$data$fee","post","fee","setTimeout","style","styles","container","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","form","position","marginBottom","type","placeholder","onChange","input","length","map","onClick","onMouseDown","suggestionItem","required","textarea","statusContainer","button","_c","maxWidth","margin","padding","border","borderRadius","backgroundColor","display","flexDirection","width","minHeight","background","color","cursor","fontWeight","top","left","right","listStyle","maxHeight","overflowY","zIndex","fontSize","$RefreshReg$"],"sources":["C:/Users/Administrator/Documents/inquiry_form/client/src/screens/Admin/AdminPayments.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// const AdminPayments = () => {\r\n//   const [students, setStudents] = useState([]);\r\n//   const [suggestions, setSuggestions] = useState([]);\r\n//   const [searchQuery, setSearchQuery] = useState(\"\");\r\n//   const [formData, setFormData] = useState({\r\n//     studentId: \"\",\r\n//     total: \"\",\r\n//     deposit: \"\",\r\n//     monthly: \"\",\r\n//     final: \"\",\r\n//     notes: \"\",\r\n//   });\r\n//   const [feeStatus, setFeeStatus] = useState(\"Pending\");\r\n//   const [message, setMessage] = useState(\"\");\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   // Fetch users (students) from backend\r\n//   useEffect(() => {\r\n//     const fetchStudents = async () => {\r\n//       try {\r\n//         const res = await axios.get(\"http://localhost:5000/api/users\");\r\n//         console.log(\"API Response:\", res.data);\r\n//         if (Array.isArray(res.data)) {\r\n//           setStudents(res.data);\r\n//         } else {\r\n//           setStudents([]);\r\n//           setMessage(\"‚ö†Ô∏è Unexpected data format from API.\");\r\n//         }\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching students:\", error);\r\n//         setMessage(\"‚ùå Failed to load students. Check console for details.\");\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n//     fetchStudents();\r\n//   }, []);\r\n\r\n//   // Handle live search\r\n//   const handleSearchChange = (e) => {\r\n//     const query = e.target.value.toLowerCase();\r\n//     setSearchQuery(e.target.value);\r\n\r\n//     if (query.length > 0) {\r\n//       const filtered = students.filter(\r\n//         (s) =>\r\n//           s.fullName?.toLowerCase().includes(query) ||\r\n//           s.email?.toLowerCase().includes(query) ||\r\n//           `${s.fullName} (${s.email})`.toLowerCase().includes(query)\r\n//       );\r\n//       setSuggestions(filtered);\r\n//     } else {\r\n//       setSuggestions([]);\r\n//       setFormData({ ...formData, studentId: \"\" });\r\n//       setFeeStatus(\"Pending\");\r\n//     }\r\n//   };\r\n\r\n//   // Handle student selection\r\n//   const handleSelectStudent = async (student) => {\r\n//     setSearchQuery(`${student.fullName} (${student.email})`);\r\n//     setFormData(prev => ({ ...prev, studentId: student._id }));\r\n//     setSuggestions([]);\r\n\r\n//     try {\r\n//       const res = await axios.get(`http://localhost:5000/api/payments/${student._id}`);\r\n//       const data = res.data;\r\n\r\n//       if (data.fees) {\r\n//         setFormData({\r\n//           studentId: student._id,\r\n//           total: data.fees.total || \"\",\r\n//           deposit: data.fees.deposit || \"\",\r\n//           monthly: data.fees.monthly || \"\",\r\n//           final: data.fees.final || \"\",\r\n//           notes: data.fees.notes || \"\",\r\n//         });\r\n//         setFeeStatus(data.fees.status || \"Pending\");\r\n//       } else {\r\n//         setFormData({\r\n//           studentId: student._id,\r\n//           total: \"\",\r\n//           deposit: \"\",\r\n//           monthly: \"\",\r\n//           final: \"\",\r\n//           notes: \"\",\r\n//         });\r\n//         setFeeStatus(\"Pending\");\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching fee status:\", error);\r\n//       setFeeStatus(\"Pending\");\r\n//     }\r\n//   };\r\n\r\n//   // Handle field changes\r\n//   const handleChange = (e) => {\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   // Handle fee assignment\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     console.log(\"Submitting fee data:\", formData);\r\n\r\n//     if (!formData.studentId || !formData.total || !formData.deposit || !formData.monthly || !formData.final) {\r\n//       setMessage(\"‚ö†Ô∏è Please select a student and fill all fee fields.\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const res = await axios.post(\"http://localhost:5000/api/payments/assign-fee\", formData, {\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//       });\r\n//       setMessage(\"‚úÖ Fee assigned/updated successfully!\");\r\n//       setFeeStatus(res.data.fee?.status || \"Updated\");\r\n//       setTimeout(() => setMessage(\"\"), 3000);\r\n//     } catch (error) {\r\n//       console.error(\"Error assigning fee:\", {\r\n//         message: error.message,\r\n//         response: error.response ? error.response.data : \"No response\",\r\n//         status: error.response ? error.response.status : \"No status\",\r\n//       });\r\n//       setMessage(\"‚ùå Failed to assign fee. Check console for details.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={styles.container}>\r\n//       <h2>üí≥ Manage Student Fees</h2>\r\n//       {message && <p style={styles.message}>{message}</p>}\r\n//       {loading ? (\r\n//         <p>Loading students...</p>\r\n//       ) : (\r\n//         <form onSubmit={handleSubmit} style={styles.form}>\r\n//           {/* Student Search */}\r\n//           <div style={{ position: \"relative\", marginBottom: \"15px\" }}>\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Search student by name or email\"\r\n//               value={searchQuery}\r\n//               onChange={handleSearchChange}\r\n//               style={styles.input}\r\n//             />\r\n//             {suggestions.length > 0 && (\r\n//               <ul style={styles.suggestions}>\r\n//                 {suggestions.map((s) => (\r\n//                   <li\r\n//                     key={s._id}\r\n//                     onClick={() => handleSelectStudent(s)}\r\n//                     onMouseDown={(e) => e.preventDefault()}\r\n//                     style={styles.suggestionItem}\r\n//                   >\r\n//                     {s.fullName} ({s.email})\r\n//                   </li>\r\n//                 ))}\r\n//               </ul>\r\n//             )}\r\n//             {searchQuery.trim() !== \"\" && suggestions.length === 0 && students.length > 0 && (\r\n//               <ul style={styles.suggestions}>\r\n//                 <li style={{ padding: \"8px\", color: \"#888\" }}>No students found</li>\r\n//               </ul>\r\n//             )}\r\n//           </div>\r\n\r\n//           {/* Fee Fields */}\r\n//           <input\r\n//             type=\"number\"\r\n//             name=\"total\"\r\n//             placeholder=\"Total Fee\"\r\n//             value={formData.total}\r\n//             onChange={handleChange}\r\n//             style={styles.input}\r\n//             required\r\n//             min=\"0\"\r\n//           />\r\n//           <input\r\n//             type=\"number\"\r\n//             name=\"deposit\"\r\n//             placeholder=\"Deposit\"\r\n//             value={formData.deposit}\r\n//             onChange={handleChange}\r\n//             style={styles.input}\r\n//             required\r\n//             min=\"0\"\r\n//           />\r\n//           <input\r\n//             type=\"number\"\r\n//             name=\"monthly\"\r\n//             placeholder=\"Monthly Fee\"\r\n//             value={formData.monthly}\r\n//             onChange={handleChange}\r\n//             style={styles.input}\r\n//             required\r\n//             min=\"0\"\r\n//           />\r\n//           <input\r\n//             type=\"number\"\r\n//             name=\"final\"\r\n//             placeholder=\"Final Payment\"\r\n//             value={formData.final}\r\n//             onChange={handleChange}\r\n//             style={styles.input}\r\n//             required\r\n//             min=\"0\"\r\n//           />\r\n//           <textarea\r\n//             name=\"notes\"\r\n//             placeholder=\"Notes\"\r\n//             value={formData.notes}\r\n//             onChange={handleChange}\r\n//             style={styles.textarea}\r\n//           />\r\n\r\n//           {/* Fee Status */}\r\n//           <div style={styles.statusContainer}>\r\n//             <p>\r\n//               <strong>Current Fee Status:</strong>{\" \"}\r\n//               <span style={styles.status}>{feeStatus}</span>\r\n//             </p>\r\n//           </div>\r\n\r\n//           <button type=\"submit\" style={styles.button}>\r\n//             Assign/Update Fee\r\n//           </button>\r\n//         </form>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// // Inline CSS\r\n// const styles = {\r\n//   container: {\r\n//     maxWidth: \"500px\",\r\n//     margin: \"20px auto\",\r\n//     padding: \"20px\",\r\n//     border: \"1px solid #ddd\",\r\n//     borderRadius: \"10px\",\r\n//     backgroundColor: \"#fafafa\",\r\n//   },\r\n//   form: { display: \"flex\", flexDirection: \"column\" },\r\n//   input: {\r\n//     padding: \"10px\",\r\n//     marginBottom: \"10px\",\r\n//     borderRadius: \"5px\",\r\n//     border: \"1px solid #ccc\",\r\n//     width: \"100%\",\r\n//     boxSizing: \"border-box\",\r\n//   },\r\n//   textarea: {\r\n//     padding: \"10px\",\r\n//     marginBottom: \"10px\",\r\n//     borderRadius: \"5px\",\r\n//     border: \"1px solid #ccc\",\r\n//     width: \"100%\",\r\n//     minHeight: \"80px\",\r\n//     boxSizing: \"border-box\",\r\n//   },\r\n//   button: {\r\n//     padding: \"10px\",\r\n//     background: \"linear-gradient(to right, #6b48ff, #00c4cc)\",\r\n//     color: \"#fff\",\r\n//     border: \"none\",\r\n//     borderRadius: \"5px\",\r\n//     cursor: \"pointer\",\r\n//     fontWeight: \"bold\",\r\n//   },\r\n//   message: {\r\n//     margin: \"10px 0\",\r\n//     fontWeight: \"bold\",\r\n//     color: \"#dc3545\",\r\n//   },\r\n//   suggestions: {\r\n//     position: \"absolute\",\r\n//     top: \"100%\",\r\n//     left: 0,\r\n//     right: 0,\r\n//     border: \"1px solid #ccc\",\r\n//     backgroundColor: \"#fff\",\r\n//     borderRadius: \"5px\",\r\n//     listStyle: \"none\",\r\n//     padding: \"0\",\r\n//     margin: \"0\",\r\n//     maxHeight: \"150px\",\r\n//     overflowY: \"auto\",\r\n//     zIndex: \"1000\",\r\n//   },\r\n//   suggestionItem: {\r\n//     padding: \"8px\",\r\n//     cursor: \"pointer\",\r\n//   },\r\n//   statusContainer: {\r\n//     marginBottom: \"15px\",\r\n//     padding: \"10px\",\r\n//     background: \"#f5f6fa\",\r\n//     borderRadius: \"5px\",\r\n//   },\r\n//   status: {\r\n//     padding: \"6px 10px\",\r\n//     borderRadius: \"6px\",\r\n//     fontSize: \"14px\",\r\n//     fontWeight: \"bold\",\r\n//     background: \"#ffeaa7\",\r\n//   },\r\n// };\r\n\r\n// export default AdminPayments;\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst AdminPayments = () => {\r\n  const [students, setStudents] = useState([]);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [formData, setFormData] = useState({\r\n    studentId: \"\",\r\n    total: \"\",\r\n    deposit: \"\",\r\n    monthly: \"\",\r\n    final: \"\",\r\n    notes: \"\",\r\n  });\r\n  const [feeStatus, setFeeStatus] = useState(\"Pending\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Fetch all students\r\n  useEffect(() => {\r\n    const fetchStudents = async () => {\r\n      try {\r\n        const res = await axios.get(\"http://localhost:5000/api/users\");\r\n        const data = Array.isArray(res.data) ? res.data : res.data.users || [];\r\n        setStudents(data);\r\n      } catch (err) {\r\n        console.error(\"Error fetching students:\", err);\r\n        setMessage(\"‚ùå Failed to load students.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchStudents();\r\n  }, []);\r\n\r\n  // Handle search input change\r\n  const handleSearchChange = (e) => {\r\n    const query = e.target.value;\r\n    setSearchQuery(query);\r\n\r\n    if (!query) {\r\n      setSuggestions([]);\r\n      setFormData((prev) => ({ ...prev, studentId: \"\" }));\r\n      setFeeStatus(\"Pending\");\r\n      return;\r\n    }\r\n\r\n    const filtered = students.filter(\r\n      (s) =>\r\n        s.fullName?.toLowerCase().includes(query.toLowerCase()) ||\r\n        s.email?.toLowerCase().includes(query.toLowerCase())\r\n    );\r\n    setSuggestions(filtered);\r\n  };\r\n\r\n  // Handle student selection\r\n  const handleSelectStudent = async (student) => {\r\n    setSearchQuery(`${student.fullName} (${student.email})`);\r\n    setFormData((prev) => ({ ...prev, studentId: student._id }));\r\n    setSuggestions([]);\r\n\r\n    try {\r\n      const res = await axios.get(`http://localhost:5000/api/payments/${student._id}`);\r\n      const data = res.data;\r\n\r\n      if (data.fees) {\r\n        setFormData({\r\n          studentId: student._id,\r\n          total: data.fees.total || \"\",\r\n          deposit: data.fees.deposit || \"\",\r\n          monthly: data.fees.monthly || \"\",\r\n          final: data.fees.final || \"\",\r\n          notes: data.fees.notes || \"\",\r\n        });\r\n        setFeeStatus(data.fees.status || \"Pending\");\r\n      } else {\r\n        setFormData({\r\n          studentId: student._id,\r\n          total: \"\",\r\n          deposit: \"\",\r\n          monthly: \"\",\r\n          final: \"\",\r\n          notes: \"\",\r\n        });\r\n        setFeeStatus(\"Pending\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error fetching fee info:\", err);\r\n      setFeeStatus(\"Pending\");\r\n    }\r\n  };\r\n\r\n  // Handle field changes\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Assign / update fee\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!formData.studentId || !formData.total || !formData.deposit || !formData.monthly || !formData.final) {\r\n      setMessage(\"‚ö†Ô∏è Please select a student and fill all fee fields.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await axios.post(\"http://localhost:5000/api/payments/assign-fee\", formData);\r\n      setMessage(\"‚úÖ Fee assigned/updated successfully!\");\r\n      setFeeStatus(res.data.fee?.status || \"Updated\");\r\n      setTimeout(() => setMessage(\"\"), 3000);\r\n    } catch (err) {\r\n      console.error(\"Error assigning fee:\", err);\r\n      setMessage(\"‚ùå Failed to assign fee. Check console.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <h2>üí≥ Manage Student Fees</h2>\r\n      {message && <p style={styles.message}>{message}</p>}\r\n      {loading ? (\r\n        <p>Loading students...</p>\r\n      ) : (\r\n        <form onSubmit={handleSubmit} style={styles.form}>\r\n          {/* Student Search */}\r\n          <div style={{ position: \"relative\", marginBottom: \"15px\" }}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search student by name/email\"\r\n              value={searchQuery}\r\n              onChange={handleSearchChange}\r\n              style={styles.input}\r\n            />\r\n            {suggestions.length > 0 && (\r\n              <ul style={styles.suggestions}>\r\n                {suggestions.map((s) => (\r\n                  <li\r\n                    key={s._id}\r\n                    onClick={() => handleSelectStudent(s)}\r\n                    onMouseDown={(e) => e.preventDefault()}\r\n                    style={styles.suggestionItem}\r\n                  >\r\n                    {s.fullName} ({s.email})\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n          </div>\r\n\r\n          {/* Fee Fields */}\r\n          <input type=\"number\" name=\"total\" placeholder=\"Total Fee\" value={formData.total} onChange={handleChange} style={styles.input} required />\r\n          <input type=\"number\" name=\"deposit\" placeholder=\"Deposit\" value={formData.deposit} onChange={handleChange} style={styles.input} required />\r\n          <input type=\"number\" name=\"monthly\" placeholder=\"Monthly Fee\" value={formData.monthly} onChange={handleChange} style={styles.input} required />\r\n          <input type=\"number\" name=\"final\" placeholder=\"Final Payment\" value={formData.final} onChange={handleChange} style={styles.input} required />\r\n          <textarea name=\"notes\" placeholder=\"Notes\" value={formData.notes} onChange={handleChange} style={styles.textarea} />\r\n\r\n          {/* Fee Status */}\r\n          <div style={styles.statusContainer}>\r\n            <p>\r\n              <strong>Current Fee Status:</strong> <span style={styles.status}>{feeStatus}</span>\r\n            </p>\r\n          </div>\r\n\r\n          {/* Submit Button */}\r\n          <button type=\"submit\" style={styles.button}>Assign/Update Fee</button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Inline CSS\r\nconst styles = {\r\n  container: {\r\n    maxWidth: \"500px\",\r\n    margin: \"20px auto\",\r\n    padding: \"20px\",\r\n    border: \"1px solid #ddd\",\r\n    borderRadius: \"10px\",\r\n    backgroundColor: \"#fafafa\",\r\n  },\r\n  form: { display: \"flex\", flexDirection: \"column\" },\r\n  input: { padding: \"10px\", marginBottom: \"10px\", borderRadius: \"5px\", border: \"1px solid #ccc\", width: \"100%\" },\r\n  textarea: { padding: \"10px\", marginBottom: \"10px\", borderRadius: \"5px\", border: \"1px solid #ccc\", width: \"100%\", minHeight: \"80px\" },\r\n  button: { padding: \"10px\", background: \"linear-gradient(to right, #6b48ff, #00c4cc)\", color: \"#fff\", border: \"none\", borderRadius: \"5px\", cursor: \"pointer\", fontWeight: \"bold\" },\r\n  message: { margin: \"10px 0\", fontWeight: \"bold\", color: \"#dc3545\" },\r\n  suggestions: { position: \"absolute\", top: \"100%\", left: 0, right: 0, border: \"1px solid #ccc\", backgroundColor: \"#fff\", borderRadius: \"5px\", listStyle: \"none\", padding: 0, margin: 0, maxHeight: \"150px\", overflowY: \"auto\", zIndex: 1000 },\r\n  suggestionItem: { padding: \"8px\", cursor: \"pointer\" },\r\n  statusContainer: { marginBottom: \"15px\", padding: \"10px\", background: \"#f5f6fa\", borderRadius: \"5px\" },\r\n  status: { padding: \"6px 10px\", borderRadius: \"6px\", fontSize: \"14px\", fontWeight: \"bold\", background: \"#ffeaa7\" },\r\n};\r\n\r\nexport default AdminPayments;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}