{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Documents\\\\inquiry_form\\\\client\\\\src\\\\screens\\\\Admin\\\\AdminPayments.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// const AdminPayments = () => {\n//   const [students, setStudents] = useState([]);\n//   const [suggestions, setSuggestions] = useState([]);\n//   const [searchQuery, setSearchQuery] = useState(\"\");\n//   const [formData, setFormData] = useState({\n//     studentId: \"\",\n//     total: \"\",\n//     deposit: \"\",\n//     monthly: \"\",\n//     final: \"\",\n//     notes: \"\",\n//   });\n//   const [feeStatus, setFeeStatus] = useState(\"Pending\");\n//   const [message, setMessage] = useState(\"\");\n//   const [loading, setLoading] = useState(true);\n\n//   // Fetch users (students) from backend\n//   useEffect(() => {\n//     const fetchStudents = async () => {\n//       try {\n//         const res = await axios.get(\"http://localhost:5000/api/users\");\n//         console.log(\"API Response:\", res.data);\n//         if (Array.isArray(res.data)) {\n//           setStudents(res.data);\n//         } else {\n//           setStudents([]);\n//           setMessage(\"‚ö†Ô∏è Unexpected data format from API.\");\n//         }\n//       } catch (error) {\n//         console.error(\"Error fetching students:\", error);\n//         setMessage(\"‚ùå Failed to load students. Check console for details.\");\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n//     fetchStudents();\n//   }, []);\n\n//   // Handle live search\n//   const handleSearchChange = (e) => {\n//     const query = e.target.value.toLowerCase();\n//     setSearchQuery(e.target.value);\n\n//     if (query.length > 0) {\n//       const filtered = students.filter(\n//         (s) =>\n//           s.fullName?.toLowerCase().includes(query) ||\n//           s.email?.toLowerCase().includes(query) ||\n//           `${s.fullName} (${s.email})`.toLowerCase().includes(query)\n//       );\n//       setSuggestions(filtered);\n//     } else {\n//       setSuggestions([]);\n//       setFormData({ ...formData, studentId: \"\" });\n//       setFeeStatus(\"Pending\");\n//     }\n//   };\n\n//   // Handle student selection\n//   const handleSelectStudent = async (student) => {\n//     setSearchQuery(`${student.fullName} (${student.email})`);\n//     setFormData(prev => ({ ...prev, studentId: student._id }));\n//     setSuggestions([]);\n\n//     try {\n//       const res = await axios.get(`http://localhost:5000/api/payments/${student._id}`);\n//       const data = res.data;\n\n//       if (data.fees) {\n//         setFormData({\n//           studentId: student._id,\n//           total: data.fees.total || \"\",\n//           deposit: data.fees.deposit || \"\",\n//           monthly: data.fees.monthly || \"\",\n//           final: data.fees.final || \"\",\n//           notes: data.fees.notes || \"\",\n//         });\n//         setFeeStatus(data.fees.status || \"Pending\");\n//       } else {\n//         setFormData({\n//           studentId: student._id,\n//           total: \"\",\n//           deposit: \"\",\n//           monthly: \"\",\n//           final: \"\",\n//           notes: \"\",\n//         });\n//         setFeeStatus(\"Pending\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error fetching fee status:\", error);\n//       setFeeStatus(\"Pending\");\n//     }\n//   };\n\n//   // Handle field changes\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   // Handle fee assignment\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     console.log(\"Submitting fee data:\", formData);\n\n//     if (!formData.studentId || !formData.total || !formData.deposit || !formData.monthly || !formData.final) {\n//       setMessage(\"‚ö†Ô∏è Please select a student and fill all fee fields.\");\n//       return;\n//     }\n\n//     try {\n//       const res = await axios.post(\"http://localhost:5000/api/payments/assign-fee\", formData, {\n//         headers: { \"Content-Type\": \"application/json\" },\n//       });\n//       setMessage(\"‚úÖ Fee assigned/updated successfully!\");\n//       setFeeStatus(res.data.fee?.status || \"Updated\");\n//       setTimeout(() => setMessage(\"\"), 3000);\n//     } catch (error) {\n//       console.error(\"Error assigning fee:\", {\n//         message: error.message,\n//         response: error.response ? error.response.data : \"No response\",\n//         status: error.response ? error.response.status : \"No status\",\n//       });\n//       setMessage(\"‚ùå Failed to assign fee. Check console for details.\");\n//     }\n//   };\n\n//   return (\n//     <div style={styles.container}>\n//       <h2>üí≥ Manage Student Fees</h2>\n//       {message && <p style={styles.message}>{message}</p>}\n//       {loading ? (\n//         <p>Loading students...</p>\n//       ) : (\n//         <form onSubmit={handleSubmit} style={styles.form}>\n//           {/* Student Search */}\n//           <div style={{ position: \"relative\", marginBottom: \"15px\" }}>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search student by name or email\"\n//               value={searchQuery}\n//               onChange={handleSearchChange}\n//               style={styles.input}\n//             />\n//             {suggestions.length > 0 && (\n//               <ul style={styles.suggestions}>\n//                 {suggestions.map((s) => (\n//                   <li\n//                     key={s._id}\n//                     onClick={() => handleSelectStudent(s)}\n//                     onMouseDown={(e) => e.preventDefault()}\n//                     style={styles.suggestionItem}\n//                   >\n//                     {s.fullName} ({s.email})\n//                   </li>\n//                 ))}\n//               </ul>\n//             )}\n//             {searchQuery.trim() !== \"\" && suggestions.length === 0 && students.length > 0 && (\n//               <ul style={styles.suggestions}>\n//                 <li style={{ padding: \"8px\", color: \"#888\" }}>No students found</li>\n//               </ul>\n//             )}\n//           </div>\n\n//           {/* Fee Fields */}\n//           <input\n//             type=\"number\"\n//             name=\"total\"\n//             placeholder=\"Total Fee\"\n//             value={formData.total}\n//             onChange={handleChange}\n//             style={styles.input}\n//             required\n//             min=\"0\"\n//           />\n//           <input\n//             type=\"number\"\n//             name=\"deposit\"\n//             placeholder=\"Deposit\"\n//             value={formData.deposit}\n//             onChange={handleChange}\n//             style={styles.input}\n//             required\n//             min=\"0\"\n//           />\n//           <input\n//             type=\"number\"\n//             name=\"monthly\"\n//             placeholder=\"Monthly Fee\"\n//             value={formData.monthly}\n//             onChange={handleChange}\n//             style={styles.input}\n//             required\n//             min=\"0\"\n//           />\n//           <input\n//             type=\"number\"\n//             name=\"final\"\n//             placeholder=\"Final Payment\"\n//             value={formData.final}\n//             onChange={handleChange}\n//             style={styles.input}\n//             required\n//             min=\"0\"\n//           />\n//           <textarea\n//             name=\"notes\"\n//             placeholder=\"Notes\"\n//             value={formData.notes}\n//             onChange={handleChange}\n//             style={styles.textarea}\n//           />\n\n//           {/* Fee Status */}\n//           <div style={styles.statusContainer}>\n//             <p>\n//               <strong>Current Fee Status:</strong>{\" \"}\n//               <span style={styles.status}>{feeStatus}</span>\n//             </p>\n//           </div>\n\n//           <button type=\"submit\" style={styles.button}>\n//             Assign/Update Fee\n//           </button>\n//         </form>\n//       )}\n//     </div>\n//   );\n// };\n\n// // Inline CSS\n// const styles = {\n//   container: {\n//     maxWidth: \"500px\",\n//     margin: \"20px auto\",\n//     padding: \"20px\",\n//     border: \"1px solid #ddd\",\n//     borderRadius: \"10px\",\n//     backgroundColor: \"#fafafa\",\n//   },\n//   form: { display: \"flex\", flexDirection: \"column\" },\n//   input: {\n//     padding: \"10px\",\n//     marginBottom: \"10px\",\n//     borderRadius: \"5px\",\n//     border: \"1px solid #ccc\",\n//     width: \"100%\",\n//     boxSizing: \"border-box\",\n//   },\n//   textarea: {\n//     padding: \"10px\",\n//     marginBottom: \"10px\",\n//     borderRadius: \"5px\",\n//     border: \"1px solid #ccc\",\n//     width: \"100%\",\n//     minHeight: \"80px\",\n//     boxSizing: \"border-box\",\n//   },\n//   button: {\n//     padding: \"10px\",\n//     background: \"linear-gradient(to right, #6b48ff, #00c4cc)\",\n//     color: \"#fff\",\n//     border: \"none\",\n//     borderRadius: \"5px\",\n//     cursor: \"pointer\",\n//     fontWeight: \"bold\",\n//   },\n//   message: {\n//     margin: \"10px 0\",\n//     fontWeight: \"bold\",\n//     color: \"#dc3545\",\n//   },\n//   suggestions: {\n//     position: \"absolute\",\n//     top: \"100%\",\n//     left: 0,\n//     right: 0,\n//     border: \"1px solid #ccc\",\n//     backgroundColor: \"#fff\",\n//     borderRadius: \"5px\",\n//     listStyle: \"none\",\n//     padding: \"0\",\n//     margin: \"0\",\n//     maxHeight: \"150px\",\n//     overflowY: \"auto\",\n//     zIndex: \"1000\",\n//   },\n//   suggestionItem: {\n//     padding: \"8px\",\n//     cursor: \"pointer\",\n//   },\n//   statusContainer: {\n//     marginBottom: \"15px\",\n//     padding: \"10px\",\n//     background: \"#f5f6fa\",\n//     borderRadius: \"5px\",\n//   },\n//   status: {\n//     padding: \"6px 10px\",\n//     borderRadius: \"6px\",\n//     fontSize: \"14px\",\n//     fontWeight: \"bold\",\n//     background: \"#ffeaa7\",\n//   },\n// };\n\n// export default AdminPayments;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// const AdminPayments = () => {\n//   const [students, setStudents] = useState([]);\n//   const [suggestions, setSuggestions] = useState([]);\n//   const [searchQuery, setSearchQuery] = useState(\"\");\n//   const [formData, setFormData] = useState({\n//     studentId: \"\", total: \"\", deposit: \"\", monthly: \"\", final: \"\", notes: \"\"\n//   });\n//   const [feeStatus, setFeeStatus] = useState(\"Pending\");\n//   const [message, setMessage] = useState(\"\");\n\n//   useEffect(() => {\n//     axios.get(\"http://localhost:5000/api/users\")\n//       .then(res => setStudents(res.data))\n//       .catch(err => console.error(err));\n//   }, []);\n\n//   const handleSearchChange = (e) => {\n//     const query = e.target.value;\n//     setSearchQuery(query);\n//     if (!query) return setSuggestions([]);\n//     const filtered = students.filter(\n//       s => s.fullName.toLowerCase().includes(query.toLowerCase()) ||\n//            s.email.toLowerCase().includes(query.toLowerCase())\n//     );\n//     setSuggestions(filtered);\n//   };\n\n//   const handleSelectStudent = async (student) => {\n//     setSearchQuery(`${student.fullName} (${student.email})`);\n//     setFormData(prev => ({ ...prev, studentId: student._id }));\n//     setSuggestions([]);\n\n//     try {\n//       const res = await axios.get(`http://localhost:5000/api/payments/${student._id}`);\n//       const fee = res.data.fees || {};\n//       setFormData(prev => ({\n//         ...prev,\n//         total: fee.total || \"\",\n//         deposit: fee.deposit || \"\",\n//         monthly: fee.monthly || \"\",\n//         final: fee.final || \"\",\n//         notes: fee.notes || \"\"\n//       }));\n//       setFeeStatus(fee.status || \"Pending\");\n//     } catch (err) {\n//       console.error(err);\n//       setFeeStatus(\"Pending\");\n//     }\n//   };\n\n//   const handleChange = (e) => setFormData(prev => ({ ...prev, [e.target.name]: e.target.value }));\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!formData.studentId) return setMessage(\"Select a student first!\");\n//     try {\n//       const res = await axios.post(\"http://localhost:5000/api/payments/assign-fee\", formData);\n//       setFeeStatus(res.data.fee.status || \"Updated\");\n//       setMessage(\"‚úÖ Fee assigned/updated successfully!\");\n//       setTimeout(() => setMessage(\"\"), 3000);\n//     } catch (err) {\n//       console.error(err);\n//       setMessage(\"‚ùå Failed to assign fee\");\n//     }\n//   };\n\n//   return (\n//     <div style={{ maxWidth: 500, margin: \"50px auto\", padding: 20, border: \"1px solid #ddd\", borderRadius: 10 }}>\n//       <h2>üí≥ Manage Student Fees</h2>\n//       {message && <p style={{ color: \"#dc3545\" }}>{message}</p>}\n\n//       <form onSubmit={handleSubmit}>\n//         <div style={{ position: \"relative\", marginBottom: 15 }}>\n//           <input\n//             type=\"text\" placeholder=\"Search student\"\n//             value={searchQuery} onChange={handleSearchChange}\n//             style={{ width: \"100%\", padding: 10 }}\n//           />\n//           {suggestions.length > 0 && (\n//             <ul style={{ position: \"absolute\", top: \"100%\", left: 0, right: 0, border: \"1px solid #ccc\", background: \"#fff\", listStyle: \"none\", margin: 0, padding: 0 }}>\n//               {suggestions.map(s =>\n//                 <li key={s._id} onMouseDown={() => handleSelectStudent(s)} style={{ padding: 8, cursor: \"pointer\" }}>\n//                   {s.fullName} ({s.email})\n//                 </li>\n//               )}\n//             </ul>\n//           )}\n//         </div>\n\n//         <input type=\"number\" name=\"total\" placeholder=\"Total Fee\" value={formData.total} onChange={handleChange} required style={{ width: \"100%\", padding: 10, marginBottom: 10 }} />\n//         <input type=\"number\" name=\"deposit\" placeholder=\"Deposit\" value={formData.deposit} onChange={handleChange} required style={{ width: \"100%\", padding: 10, marginBottom: 10 }} />\n//         <input type=\"number\" name=\"monthly\" placeholder=\"Monthly Fee\" value={formData.monthly} onChange={handleChange} required style={{ width: \"100%\", padding: 10, marginBottom: 10 }} />\n//         <input type=\"number\" name=\"final\" placeholder=\"Final Payment\" value={formData.final} onChange={handleChange} required style={{ width: \"100%\", padding: 10, marginBottom: 10 }} />\n//         <textarea name=\"notes\" placeholder=\"Notes\" value={formData.notes} onChange={handleChange} style={{ width: \"100%\", padding: 10, marginBottom: 10 }} />\n\n//         <p>Current Fee Status: <strong>{feeStatus}</strong></p>\n//         <button type=\"submit\" style={{ padding: 10, background: \"#6b48ff\", color: \"#fff\", border: \"none\", cursor: \"pointer\" }}>Assign/Update Fee</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default AdminPayments;\n\nimport React, { useEffect, useState } from \"react\";\nimport Sidebar from \"../../components/Sidebar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPayments = () => {\n  _s();\n  const [payments, setPayments] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:5000/api/payments\").then(res => res.json()).then(data => setPayments(data)).catch(err => console.error(\"‚ùå Error fetching payments:\", err));\n  }, []);\n  const styles = {\n    layout: {\n      display: \"flex\",\n      height: \"100vh\",\n      fontFamily: \"Arial, sans-serif\"\n    },\n    page: {\n      flex: 1,\n      padding: \"30px\",\n      background: \"#ecf0f1\"\n    },\n    card: {\n      background: \"#fff\",\n      padding: \"20px\",\n      borderRadius: \"12px\",\n      boxShadow: \"0 3px 10px rgba(0,0,0,0.1)\"\n    },\n    table: {\n      width: \"100%\",\n      borderCollapse: \"collapse\",\n      marginTop: \"20px\"\n    },\n    th: {\n      background: \"#2c3e50\",\n      color: \"#fff\",\n      padding: \"10px\"\n    },\n    td: {\n      borderBottom: \"1px solid #ddd\",\n      padding: \"10px\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.layout,\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.page,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83D\\uDCB3 Payments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.card,\n        children: payments.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No payments found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n          style: styles.table,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                style: styles.th,\n                children: \"Student\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: styles.th,\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: styles.th,\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: payments.map(pay => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                style: styles.td,\n                children: pay.studentName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: styles.td,\n                children: [\"\\u20B9\", pay.amount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: styles.td,\n                children: new Date(pay.date).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 21\n              }, this)]\n            }, pay._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 455,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPayments, \"BVfHARDuDX1kvYsyBs9AZLQhe/4=\");\n_c = AdminPayments;\nexport default AdminPayments;\nvar _c;\n$RefreshReg$(_c, \"AdminPayments\");","map":{"version":3,"names":["React","useEffect","useState","Sidebar","jsxDEV","_jsxDEV","AdminPayments","_s","payments","setPayments","fetch","then","res","json","data","catch","err","console","error","styles","layout","display","height","fontFamily","page","flex","padding","background","card","borderRadius","boxShadow","table","width","borderCollapse","marginTop","th","color","td","borderBottom","style","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","pay","studentName","amount","Date","date","toLocaleDateString","_id","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Documents/inquiry_form/client/src/screens/Admin/AdminPayments.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// const AdminPayments = () => {\r\n//   const [students, setStudents] = useState([]);\r\n//   const [suggestions, setSuggestions] = useState([]);\r\n//   const [searchQuery, setSearchQuery] = useState(\"\");\r\n//   const [formData, setFormData] = useState({\r\n//     studentId: \"\",\r\n//     total: \"\",\r\n//     deposit: \"\",\r\n//     monthly: \"\",\r\n//     final: \"\",\r\n//     notes: \"\",\r\n//   });\r\n//   const [feeStatus, setFeeStatus] = useState(\"Pending\");\r\n//   const [message, setMessage] = useState(\"\");\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   // Fetch users (students) from backend\r\n//   useEffect(() => {\r\n//     const fetchStudents = async () => {\r\n//       try {\r\n//         const res = await axios.get(\"http://localhost:5000/api/users\");\r\n//         console.log(\"API Response:\", res.data);\r\n//         if (Array.isArray(res.data)) {\r\n//           setStudents(res.data);\r\n//         } else {\r\n//           setStudents([]);\r\n//           setMessage(\"‚ö†Ô∏è Unexpected data format from API.\");\r\n//         }\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching students:\", error);\r\n//         setMessage(\"‚ùå Failed to load students. Check console for details.\");\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n//     fetchStudents();\r\n//   }, []);\r\n\r\n//   // Handle live search\r\n//   const handleSearchChange = (e) => {\r\n//     const query = e.target.value.toLowerCase();\r\n//     setSearchQuery(e.target.value);\r\n\r\n//     if (query.length > 0) {\r\n//       const filtered = students.filter(\r\n//         (s) =>\r\n//           s.fullName?.toLowerCase().includes(query) ||\r\n//           s.email?.toLowerCase().includes(query) ||\r\n//           `${s.fullName} (${s.email})`.toLowerCase().includes(query)\r\n//       );\r\n//       setSuggestions(filtered);\r\n//     } else {\r\n//       setSuggestions([]);\r\n//       setFormData({ ...formData, studentId: \"\" });\r\n//       setFeeStatus(\"Pending\");\r\n//     }\r\n//   };\r\n\r\n//   // Handle student selection\r\n//   const handleSelectStudent = async (student) => {\r\n//     setSearchQuery(`${student.fullName} (${student.email})`);\r\n//     setFormData(prev => ({ ...prev, studentId: student._id }));\r\n//     setSuggestions([]);\r\n\r\n//     try {\r\n//       const res = await axios.get(`http://localhost:5000/api/payments/${student._id}`);\r\n//       const data = res.data;\r\n\r\n//       if (data.fees) {\r\n//         setFormData({\r\n//           studentId: student._id,\r\n//           total: data.fees.total || \"\",\r\n//           deposit: data.fees.deposit || \"\",\r\n//           monthly: data.fees.monthly || \"\",\r\n//           final: data.fees.final || \"\",\r\n//           notes: data.fees.notes || \"\",\r\n//         });\r\n//         setFeeStatus(data.fees.status || \"Pending\");\r\n//       } else {\r\n//         setFormData({\r\n//           studentId: student._id,\r\n//           total: \"\",\r\n//           deposit: \"\",\r\n//           monthly: \"\",\r\n//           final: \"\",\r\n//           notes: \"\",\r\n//         });\r\n//         setFeeStatus(\"Pending\");\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching fee status:\", error);\r\n//       setFeeStatus(\"Pending\");\r\n//     }\r\n//   };\r\n\r\n//   // Handle field changes\r\n//   const handleChange = (e) => {\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   // Handle fee assignment\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     console.log(\"Submitting fee data:\", formData);\r\n\r\n//     if (!formData.studentId || !formData.total || !formData.deposit || !formData.monthly || !formData.final) {\r\n//       setMessage(\"‚ö†Ô∏è Please select a student and fill all fee fields.\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const res = await axios.post(\"http://localhost:5000/api/payments/assign-fee\", formData, {\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//       });\r\n//       setMessage(\"‚úÖ Fee assigned/updated successfully!\");\r\n//       setFeeStatus(res.data.fee?.status || \"Updated\");\r\n//       setTimeout(() => setMessage(\"\"), 3000);\r\n//     } catch (error) {\r\n//       console.error(\"Error assigning fee:\", {\r\n//         message: error.message,\r\n//         response: error.response ? error.response.data : \"No response\",\r\n//         status: error.response ? error.response.status : \"No status\",\r\n//       });\r\n//       setMessage(\"‚ùå Failed to assign fee. Check console for details.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={styles.container}>\r\n//       <h2>üí≥ Manage Student Fees</h2>\r\n//       {message && <p style={styles.message}>{message}</p>}\r\n//       {loading ? (\r\n//         <p>Loading students...</p>\r\n//       ) : (\r\n//         <form onSubmit={handleSubmit} style={styles.form}>\r\n//           {/* Student Search */}\r\n//           <div style={{ position: \"relative\", marginBottom: \"15px\" }}>\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Search student by name or email\"\r\n//               value={searchQuery}\r\n//               onChange={handleSearchChange}\r\n//               style={styles.input}\r\n//             />\r\n//             {suggestions.length > 0 && (\r\n//               <ul style={styles.suggestions}>\r\n//                 {suggestions.map((s) => (\r\n//                   <li\r\n//                     key={s._id}\r\n//                     onClick={() => handleSelectStudent(s)}\r\n//                     onMouseDown={(e) => e.preventDefault()}\r\n//                     style={styles.suggestionItem}\r\n//                   >\r\n//                     {s.fullName} ({s.email})\r\n//                   </li>\r\n//                 ))}\r\n//               </ul>\r\n//             )}\r\n//             {searchQuery.trim() !== \"\" && suggestions.length === 0 && students.length > 0 && (\r\n//               <ul style={styles.suggestions}>\r\n//                 <li style={{ padding: \"8px\", color: \"#888\" }}>No students found</li>\r\n//               </ul>\r\n//             )}\r\n//           </div>\r\n\r\n//           {/* Fee Fields */}\r\n//           <input\r\n//             type=\"number\"\r\n//             name=\"total\"\r\n//             placeholder=\"Total Fee\"\r\n//             value={formData.total}\r\n//             onChange={handleChange}\r\n//             style={styles.input}\r\n//             required\r\n//             min=\"0\"\r\n//           />\r\n//           <input\r\n//             type=\"number\"\r\n//             name=\"deposit\"\r\n//             placeholder=\"Deposit\"\r\n//             value={formData.deposit}\r\n//             onChange={handleChange}\r\n//             style={styles.input}\r\n//             required\r\n//             min=\"0\"\r\n//           />\r\n//           <input\r\n//             type=\"number\"\r\n//             name=\"monthly\"\r\n//             placeholder=\"Monthly Fee\"\r\n//             value={formData.monthly}\r\n//             onChange={handleChange}\r\n//             style={styles.input}\r\n//             required\r\n//             min=\"0\"\r\n//           />\r\n//           <input\r\n//             type=\"number\"\r\n//             name=\"final\"\r\n//             placeholder=\"Final Payment\"\r\n//             value={formData.final}\r\n//             onChange={handleChange}\r\n//             style={styles.input}\r\n//             required\r\n//             min=\"0\"\r\n//           />\r\n//           <textarea\r\n//             name=\"notes\"\r\n//             placeholder=\"Notes\"\r\n//             value={formData.notes}\r\n//             onChange={handleChange}\r\n//             style={styles.textarea}\r\n//           />\r\n\r\n//           {/* Fee Status */}\r\n//           <div style={styles.statusContainer}>\r\n//             <p>\r\n//               <strong>Current Fee Status:</strong>{\" \"}\r\n//               <span style={styles.status}>{feeStatus}</span>\r\n//             </p>\r\n//           </div>\r\n\r\n//           <button type=\"submit\" style={styles.button}>\r\n//             Assign/Update Fee\r\n//           </button>\r\n//         </form>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// // Inline CSS\r\n// const styles = {\r\n//   container: {\r\n//     maxWidth: \"500px\",\r\n//     margin: \"20px auto\",\r\n//     padding: \"20px\",\r\n//     border: \"1px solid #ddd\",\r\n//     borderRadius: \"10px\",\r\n//     backgroundColor: \"#fafafa\",\r\n//   },\r\n//   form: { display: \"flex\", flexDirection: \"column\" },\r\n//   input: {\r\n//     padding: \"10px\",\r\n//     marginBottom: \"10px\",\r\n//     borderRadius: \"5px\",\r\n//     border: \"1px solid #ccc\",\r\n//     width: \"100%\",\r\n//     boxSizing: \"border-box\",\r\n//   },\r\n//   textarea: {\r\n//     padding: \"10px\",\r\n//     marginBottom: \"10px\",\r\n//     borderRadius: \"5px\",\r\n//     border: \"1px solid #ccc\",\r\n//     width: \"100%\",\r\n//     minHeight: \"80px\",\r\n//     boxSizing: \"border-box\",\r\n//   },\r\n//   button: {\r\n//     padding: \"10px\",\r\n//     background: \"linear-gradient(to right, #6b48ff, #00c4cc)\",\r\n//     color: \"#fff\",\r\n//     border: \"none\",\r\n//     borderRadius: \"5px\",\r\n//     cursor: \"pointer\",\r\n//     fontWeight: \"bold\",\r\n//   },\r\n//   message: {\r\n//     margin: \"10px 0\",\r\n//     fontWeight: \"bold\",\r\n//     color: \"#dc3545\",\r\n//   },\r\n//   suggestions: {\r\n//     position: \"absolute\",\r\n//     top: \"100%\",\r\n//     left: 0,\r\n//     right: 0,\r\n//     border: \"1px solid #ccc\",\r\n//     backgroundColor: \"#fff\",\r\n//     borderRadius: \"5px\",\r\n//     listStyle: \"none\",\r\n//     padding: \"0\",\r\n//     margin: \"0\",\r\n//     maxHeight: \"150px\",\r\n//     overflowY: \"auto\",\r\n//     zIndex: \"1000\",\r\n//   },\r\n//   suggestionItem: {\r\n//     padding: \"8px\",\r\n//     cursor: \"pointer\",\r\n//   },\r\n//   statusContainer: {\r\n//     marginBottom: \"15px\",\r\n//     padding: \"10px\",\r\n//     background: \"#f5f6fa\",\r\n//     borderRadius: \"5px\",\r\n//   },\r\n//   status: {\r\n//     padding: \"6px 10px\",\r\n//     borderRadius: \"6px\",\r\n//     fontSize: \"14px\",\r\n//     fontWeight: \"bold\",\r\n//     background: \"#ffeaa7\",\r\n//   },\r\n// };\r\n\r\n// export default AdminPayments;\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// const AdminPayments = () => {\r\n//   const [students, setStudents] = useState([]);\r\n//   const [suggestions, setSuggestions] = useState([]);\r\n//   const [searchQuery, setSearchQuery] = useState(\"\");\r\n//   const [formData, setFormData] = useState({\r\n//     studentId: \"\", total: \"\", deposit: \"\", monthly: \"\", final: \"\", notes: \"\"\r\n//   });\r\n//   const [feeStatus, setFeeStatus] = useState(\"Pending\");\r\n//   const [message, setMessage] = useState(\"\");\r\n\r\n//   useEffect(() => {\r\n//     axios.get(\"http://localhost:5000/api/users\")\r\n//       .then(res => setStudents(res.data))\r\n//       .catch(err => console.error(err));\r\n//   }, []);\r\n\r\n//   const handleSearchChange = (e) => {\r\n//     const query = e.target.value;\r\n//     setSearchQuery(query);\r\n//     if (!query) return setSuggestions([]);\r\n//     const filtered = students.filter(\r\n//       s => s.fullName.toLowerCase().includes(query.toLowerCase()) ||\r\n//            s.email.toLowerCase().includes(query.toLowerCase())\r\n//     );\r\n//     setSuggestions(filtered);\r\n//   };\r\n\r\n//   const handleSelectStudent = async (student) => {\r\n//     setSearchQuery(`${student.fullName} (${student.email})`);\r\n//     setFormData(prev => ({ ...prev, studentId: student._id }));\r\n//     setSuggestions([]);\r\n\r\n//     try {\r\n//       const res = await axios.get(`http://localhost:5000/api/payments/${student._id}`);\r\n//       const fee = res.data.fees || {};\r\n//       setFormData(prev => ({\r\n//         ...prev,\r\n//         total: fee.total || \"\",\r\n//         deposit: fee.deposit || \"\",\r\n//         monthly: fee.monthly || \"\",\r\n//         final: fee.final || \"\",\r\n//         notes: fee.notes || \"\"\r\n//       }));\r\n//       setFeeStatus(fee.status || \"Pending\");\r\n//     } catch (err) {\r\n//       console.error(err);\r\n//       setFeeStatus(\"Pending\");\r\n//     }\r\n//   };\r\n\r\n//   const handleChange = (e) => setFormData(prev => ({ ...prev, [e.target.name]: e.target.value }));\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!formData.studentId) return setMessage(\"Select a student first!\");\r\n//     try {\r\n//       const res = await axios.post(\"http://localhost:5000/api/payments/assign-fee\", formData);\r\n//       setFeeStatus(res.data.fee.status || \"Updated\");\r\n//       setMessage(\"‚úÖ Fee assigned/updated successfully!\");\r\n//       setTimeout(() => setMessage(\"\"), 3000);\r\n//     } catch (err) {\r\n//       console.error(err);\r\n//       setMessage(\"‚ùå Failed to assign fee\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ maxWidth: 500, margin: \"50px auto\", padding: 20, border: \"1px solid #ddd\", borderRadius: 10 }}>\r\n//       <h2>üí≥ Manage Student Fees</h2>\r\n//       {message && <p style={{ color: \"#dc3545\" }}>{message}</p>}\r\n\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div style={{ position: \"relative\", marginBottom: 15 }}>\r\n//           <input\r\n//             type=\"text\" placeholder=\"Search student\"\r\n//             value={searchQuery} onChange={handleSearchChange}\r\n//             style={{ width: \"100%\", padding: 10 }}\r\n//           />\r\n//           {suggestions.length > 0 && (\r\n//             <ul style={{ position: \"absolute\", top: \"100%\", left: 0, right: 0, border: \"1px solid #ccc\", background: \"#fff\", listStyle: \"none\", margin: 0, padding: 0 }}>\r\n//               {suggestions.map(s =>\r\n//                 <li key={s._id} onMouseDown={() => handleSelectStudent(s)} style={{ padding: 8, cursor: \"pointer\" }}>\r\n//                   {s.fullName} ({s.email})\r\n//                 </li>\r\n//               )}\r\n//             </ul>\r\n//           )}\r\n//         </div>\r\n\r\n//         <input type=\"number\" name=\"total\" placeholder=\"Total Fee\" value={formData.total} onChange={handleChange} required style={{ width: \"100%\", padding: 10, marginBottom: 10 }} />\r\n//         <input type=\"number\" name=\"deposit\" placeholder=\"Deposit\" value={formData.deposit} onChange={handleChange} required style={{ width: \"100%\", padding: 10, marginBottom: 10 }} />\r\n//         <input type=\"number\" name=\"monthly\" placeholder=\"Monthly Fee\" value={formData.monthly} onChange={handleChange} required style={{ width: \"100%\", padding: 10, marginBottom: 10 }} />\r\n//         <input type=\"number\" name=\"final\" placeholder=\"Final Payment\" value={formData.final} onChange={handleChange} required style={{ width: \"100%\", padding: 10, marginBottom: 10 }} />\r\n//         <textarea name=\"notes\" placeholder=\"Notes\" value={formData.notes} onChange={handleChange} style={{ width: \"100%\", padding: 10, marginBottom: 10 }} />\r\n\r\n//         <p>Current Fee Status: <strong>{feeStatus}</strong></p>\r\n//         <button type=\"submit\" style={{ padding: 10, background: \"#6b48ff\", color: \"#fff\", border: \"none\", cursor: \"pointer\" }}>Assign/Update Fee</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AdminPayments;\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Sidebar from \"../../components/Sidebar\";\r\n\r\nconst AdminPayments = () => {\r\n  const [payments, setPayments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/api/payments\")\r\n      .then((res) => res.json())\r\n      .then((data) => setPayments(data))\r\n      .catch((err) => console.error(\"‚ùå Error fetching payments:\", err));\r\n  }, []);\r\n\r\n  const styles = {\r\n    layout: { display: \"flex\", height: \"100vh\", fontFamily: \"Arial, sans-serif\" },\r\n    page: { flex: 1, padding: \"30px\", background: \"#ecf0f1\" },\r\n    card: {\r\n      background: \"#fff\",\r\n      padding: \"20px\",\r\n      borderRadius: \"12px\",\r\n      boxShadow: \"0 3px 10px rgba(0,0,0,0.1)\",\r\n    },\r\n    table: { width: \"100%\", borderCollapse: \"collapse\", marginTop: \"20px\" },\r\n    th: { background: \"#2c3e50\", color: \"#fff\", padding: \"10px\" },\r\n    td: { borderBottom: \"1px solid #ddd\", padding: \"10px\" },\r\n  };\r\n\r\n  return (\r\n    <div style={styles.layout}>\r\n      <Sidebar />\r\n      <div style={styles.page}>\r\n        <h1>üí≥ Payments</h1>\r\n        <div style={styles.card}>\r\n          {payments.length === 0 ? (\r\n            <p>No payments found.</p>\r\n          ) : (\r\n            <table style={styles.table}>\r\n              <thead>\r\n                <tr>\r\n                  <th style={styles.th}>Student</th>\r\n                  <th style={styles.th}>Amount</th>\r\n                  <th style={styles.th}>Date</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {payments.map((pay) => (\r\n                  <tr key={pay._id}>\r\n                    <td style={styles.td}>{pay.studentName}</td>\r\n                    <td style={styles.td}>‚Çπ{pay.amount}</td>\r\n                    <td style={styles.td}>\r\n                      {new Date(pay.date).toLocaleDateString()}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPayments;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAOA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACdS,KAAK,CAAC,oCAAoC,CAAC,CACxCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKL,WAAW,CAACK,IAAI,CAAC,CAAC,CACjCC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}