{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Documents\\\\inquiry_form\\\\client\\\\src\\\\components\\\\ProtectedRoute.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const [isChecking, setIsChecking] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    const userId = localStorage.getItem(\"userId\");\n    const role = localStorage.getItem(\"role\");\n\n    // Simulate slight delay to prevent premature redirect\n    setTimeout(() => {\n      if (userId && role) {\n        setIsAuthenticated(true);\n      }\n      setIsChecking(false);\n    }, 300);\n  }, []);\n  if (isChecking) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\",\n        marginTop: \"20vh\",\n        fontSize: 20\n      },\n      children: \"Checking authentication...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n  return isAuthenticated ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 39\n  }, this);\n};\n_s(ProtectedRoute, \"o6p1n3BCujUHcxpdEq8/OxXjcVw=\");\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useEffect","useState","Navigate","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","isChecking","setIsChecking","isAuthenticated","setIsAuthenticated","userId","localStorage","getItem","role","setTimeout","style","textAlign","marginTop","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Documents/inquiry_form/client/src/components/ProtectedRoute.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n  const [isChecking, setIsChecking] = useState(true);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const userId = localStorage.getItem(\"userId\");\r\n    const role = localStorage.getItem(\"role\");\r\n\r\n    // Simulate slight delay to prevent premature redirect\r\n    setTimeout(() => {\r\n      if (userId && role) {\r\n        setIsAuthenticated(true);\r\n      }\r\n      setIsChecking(false);\r\n    }, 300);\r\n  }, []);\r\n\r\n  if (isChecking) {\r\n    return (\r\n      <div style={{ textAlign: \"center\", marginTop: \"20vh\", fontSize: 20 }}>\r\n        Checking authentication...\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return isAuthenticated ? children : <Navigate to=\"/login\" replace />;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACS,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE7DD,SAAS,CAAC,MAAM;IACd,MAAMY,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC7C,MAAMC,IAAI,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;;IAEzC;IACAE,UAAU,CAAC,MAAM;MACf,IAAIJ,MAAM,IAAIG,IAAI,EAAE;QAClBJ,kBAAkB,CAAC,IAAI,CAAC;MAC1B;MACAF,aAAa,CAAC,KAAK,CAAC;IACtB,CAAC,EAAE,GAAG,CAAC;EACT,CAAC,EAAE,EAAE,CAAC;EAEN,IAAID,UAAU,EAAE;IACd,oBACEJ,OAAA;MAAKa,KAAK,EAAE;QAAEC,SAAS,EAAE,QAAQ;QAAEC,SAAS,EAAE,MAAM;QAAEC,QAAQ,EAAE;MAAG,CAAE;MAAAd,QAAA,EAAC;IAEtE;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAEV;EAEA,OAAOd,eAAe,GAAGJ,QAAQ,gBAAGF,OAAA,CAACF,QAAQ;IAACuB,EAAE,EAAC,QAAQ;IAACC,OAAO;EAAA;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACtE,CAAC;AAACjB,EAAA,CA1BIF,cAAc;AAAAsB,EAAA,GAAdtB,cAAc;AA4BpB,eAAeA,cAAc;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}