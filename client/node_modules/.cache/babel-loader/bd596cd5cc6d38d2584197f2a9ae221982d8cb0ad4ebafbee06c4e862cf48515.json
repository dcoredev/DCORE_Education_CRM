{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Documents\\\\inquiry_form\\\\client\\\\src\\\\screens\\\\Admin\\\\AdminPayments.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// const AdminPayments = () => {\n//   const [students, setStudents] = useState([]);\n//   const [suggestions, setSuggestions] = useState([]);\n//   const [searchQuery, setSearchQuery] = useState(\"\");\n//   const [formData, setFormData] = useState({\n//     studentId: \"\",\n//     amount: \"\",\n//     method: \"Cash\",\n//     description: \"\",\n//   });\n//   const [message, setMessage] = useState(\"\");\n//   const [loading, setLoading] = useState(true);\n\n//   useEffect(() => {\n//     const fetchStudents = async () => {\n//       try {\n//         const res = await axios.get(\"http://localhost:5000/api/users\");\n//         console.log(\"API Response:\", res.data);\n//         if (Array.isArray(res.data)) {\n//           setStudents(res.data);\n//         } else {\n//           setStudents([]);\n//           setMessage(\"‚ö†Ô∏è Unexpected data format from API.\");\n//         }\n//       } catch (error) {\n//         console.error(\"Error fetching students:\", error);\n//         setMessage(\"‚ùå Failed to load students. Check console for details.\");\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n//     fetchStudents();\n//   }, []);\n\n//   const handleSearchChange = (e) => {\n//     const query = e.target.value.toLowerCase();\n//     setSearchQuery(e.target.value);\n\n//     if (query.length > 0) {\n//       const filtered = students.filter(\n//         (s) =>\n//           s.fullName?.toLowerCase().includes(query) ||\n//           s.email?.toLowerCase().includes(query) ||\n//           `${s.fullName} (${s.email})`.toLowerCase().includes(query)\n//       );\n//       setSuggestions(filtered);\n\n//       if (filtered.length === 1 && \n//           (filtered[0].fullName.toLowerCase() === query ||\n//            filtered[0].email.toLowerCase() === query ||\n//            `${filtered[0].fullName} (${filtered[0].email})`.toLowerCase() === query)) {\n//         handleSelectStudent(filtered[0]);\n//       }\n//     } else {\n//       setSuggestions([]);\n//       setFormData({ ...formData, studentId: \"\" });\n//     }\n//   };\n\n//   const handleSelectStudent = (student) => {\n//     setFormData({ ...formData, studentId: student._id });\n//     setSearchQuery(`${student.fullName} (${student.email})`);\n//     setSuggestions([]);\n//     console.log(\"Selected student ID:\", student._id); // Debug student selection\n//   };\n\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     console.log(\"Submitting form data:\", formData); // Log form data before submission\n//     if (!formData.studentId || !formData.amount) {\n//       setMessage(\"‚ö†Ô∏è Please select a student and enter an amount.\");\n//       return;\n//     }\n\n//     try {\n//       const res = await axios.post(\"http://localhost:5000/api/payments\", formData, {\n//         headers: { \"Content-Type\": \"application/json\" },\n//       });\n//       setMessage(\"‚úÖ Payment recorded successfully!\");\n//       setFormData({\n//         studentId: \"\",\n//         amount: \"\",\n//         method: \"Cash\",\n//         description: \"\",\n//       });\n//       setSearchQuery(\"\");\n//     } catch (error) {\n//       console.error(\"Error saving payment:\", {\n//         message: error.message,\n//         response: error.response ? error.response.data : \"No response\",\n//         status: error.response ? error.response.status : \"No status\",\n//       });\n//       setMessage(\"‚ùå Failed to record payment. Check console for details.\");\n//     }\n//   };\n\n//   return (\n//     <div style={styles.container}>\n//       <h2>üí≥ Record Payment</h2>\n//       {message && <p style={styles.message}>{message}</p>}\n//       {loading ? (\n//         <p>Loading students...</p>\n//       ) : (\n//         <form onSubmit={handleSubmit} style={styles.form}>\n//           <div style={{ position: \"relative\", marginBottom: \"15px\" }}>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search student by name or email\"\n//               value={searchQuery}\n//               onChange={handleSearchChange}\n//               style={styles.input}\n//             />\n//             {suggestions.length > 0 && (\n//               <ul style={styles.suggestions}>\n//                 {suggestions.map((s) => (\n//                   <li\n//                     key={s._id}\n//                     onClick={() => handleSelectStudent(s)}\n//                     onMouseDown={(e) => e.preventDefault()}\n//                     style={styles.suggestionItem}\n//                   >\n//                     {s.fullName} ({s.email})\n//                   </li>\n//                 ))}\n//               </ul>\n//             )}\n//             {searchQuery.trim() !== \"\" && suggestions.length === 0 && students.length > 0 && (\n//               <ul style={styles.suggestions}>\n//                 <li style={{ padding: \"8px\", color: \"#888\" }}>\n//                   No students found\n//                 </li>\n//               </ul>\n//             )}\n//           </div>\n\n//           <input\n//             type=\"number\"\n//             name=\"amount\"\n//             placeholder=\"Enter amount\"\n//             value={formData.amount}\n//             onChange={handleChange}\n//             style={styles.input}\n//             required\n//             min=\"0\"\n//           />\n\n//           <select\n//             name=\"method\"\n//             value={formData.method}\n//             onChange={handleChange}\n//             style={styles.input}\n//           >\n//             <option value=\"Cash\">Cash</option>\n//             <option value=\"UPI\">UPI</option>\n//             <option value=\"Card\">Card</option>\n//             <option value=\"NetBanking\">NetBanking</option>\n//             <option value=\"Other\">Other</option>\n//           </select>\n\n//           <textarea\n//             name=\"description\"\n//             placeholder=\"Description\"\n//             value={formData.description}\n//             onChange={handleChange}\n//             style={styles.textarea}\n//           />\n\n//           <button type=\"submit\" style={styles.button}>\n//             Save Payment\n//           </button>\n//         </form>\n//       )}\n//     </div>\n//   );\n// };\n\n// // Inline CSS\n// const styles = {\n//   container: {\n//     maxWidth: \"500px\",\n//     margin: \"20px auto\",\n//     padding: \"20px\",\n//     border: \"1px solid #ddd\",\n//     borderRadius: \"10px\",\n//     backgroundColor: \"#fafafa\",\n//   },\n//   form: { display: \"flex\", flexDirection: \"column\" },\n//   input: {\n//     padding: \"10px\",\n//     marginBottom: \"10px\",\n//     borderRadius: \"5px\",\n//     border: \"1px solid #ccc\",\n//     width: \"100%\",\n//     boxSizing: \"border-box\",\n//   },\n//   textarea: {\n//     padding: \"10px\",\n//     marginBottom: \"10px\",\n//     borderRadius: \"5px\",\n//     border: \"1px solid #ccc\",\n//     width: \"100\",\n//     minHeight: \"80px\",\n//     boxSizing: \"border-box\",\n//   },\n//   button: {\n//     padding: \"10px\",\n//     background: \"linear-gradient(to right, #6b48ff, #00c4cc)\",\n//     color: \"#fff\",\n//     border: \"none\",\n//     borderRadius: \"5px\",\n//     cursor: \"pointer\",\n//     fontWeight: \"bold\",\n//   },\n//   message: {\n//     margin: \"10px 0\",\n//     fontWeight: \"bold\",\n//     color: \"#dc3545\",\n//   },\n//   suggestions: {\n//     position: \"absolute\",\n//     top: \"100%\",\n//     left: 0,\n//     right: 0,\n//     border: \"1px solid #ccc\",\n//     backgroundColor: \"#fff\",\n//     borderRadius: \"5px\",\n//     listStyle: \"none\",\n//     padding: 0,\n//     margin: 0,\n//     maxHeight: \"150px\",\n//     overflowY: \"auto\",\n//     zIndex: 1000,\n//   },\n//   suggestionItem: {\n//     padding: \"8px\",\n//     cursor: \"pointer\",\n//     \"&:hover\": {\n//       backgroundColor: \"#f0f0f0\",\n//     },\n//   },\n// };\n\n// export default AdminPayments;\n\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"../../components/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Payments = () => {\n  _s();\n  const [payments, setPayments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [totalRevenue, setTotalRevenue] = useState(0);\n  useEffect(() => {\n    const fetchPayments = async () => {\n      try {\n        const res = await fetch(\"http://localhost:5000/api/payments\");\n        const data = await res.json();\n        setPayments(data);\n\n        // Calculate revenue\n        const revenue = data.filter(p => p.status === \"Completed\").reduce((sum, p) => sum + Number(p.amount || 0), 0);\n        setTotalRevenue(revenue);\n        setLoading(false);\n      } catch (err) {\n        console.error(\"‚ùå Error fetching payments:\", err);\n        setLoading(false);\n      }\n    };\n    fetchPayments();\n  }, []);\n\n  // Group payments by studentId to show latest status\n  const studentPayments = payments.reduce((acc, p) => {\n    if (!acc[p.studentId]) {\n      acc[p.studentId] = {\n        payments: [],\n        studentName: p.studentName,\n        email: p.email\n      };\n    }\n    acc[p.studentId].payments.push(p);\n    return acc;\n  }, {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"\\uD83D\\uDCB3 Payments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        .payments-container {\n          background: #fff;\n          padding: 20px;\n          border-radius: 12px;\n          box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n          margin-top: 20px;\n        }\n        .revenue-card {\n          background: linear-gradient(135deg, #6c5ce7, #00cec9);\n          color: #fff;\n          padding: 20px;\n          border-radius: 12px;\n          font-size: 18px;\n          font-weight: bold;\n          margin-bottom: 20px;\n          text-align: center;\n        }\n        table {\n          width: 100%;\n          border-collapse: collapse;\n          margin-top: 15px;\n        }\n        th, td {\n          padding: 12px;\n          border-bottom: 1px solid #eee;\n          text-align: left;\n        }\n        th {\n          background: #f5f6fa;\n          font-weight: 600;\n        }\n        tr:hover {\n          background: #f9f9f9;\n        }\n        .status {\n          padding: 6px 10px;\n          border-radius: 6px;\n          font-size: 14px;\n          font-weight: bold;\n        }\n        .Completed {\n          background: #55efc4;\n          color: #2d3436;\n        }\n        .Pending {\n          background: #ffeaa7;\n          color: #636e72;\n        }\n        .Partial {\n          background: #fab1a0;\n          color: #d63031;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payments-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"revenue-card\",\n        children: [\"\\uD83D\\uDCB0 Total Revenue: \\u20B9\", totalRevenue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u23F3 Loading payments...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 11\n      }, this) : Object.keys(studentPayments).length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No payments found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Student\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Latest Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total Paid (\\u20B9)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Latest Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.entries(studentPayments).map(([studentId, data]) => {\n            const totalPaid = data.payments.reduce((sum, p) => sum + Number(p.amount || 0), 0);\n            const latestPayment = data.payments.reduce((latest, p) => new Date(p.createdAt) > new Date(latest.createdAt) ? p : latest);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: data.studentName || \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: data.email || \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `status ${latestPayment.status}`,\n                  children: latestPayment.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: totalPaid\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(latestPayment.createdAt).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 21\n              }, this)]\n            }, studentId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 5\n  }, this);\n};\n_s(Payments, \"rlyoKAbCg94ke7sXPie4gpf61PM=\");\n_c = Payments;\nexport default Payments;\nvar _c;\n$RefreshReg$(_c, \"Payments\");","map":{"version":3,"names":["React","useEffect","useState","Header","jsxDEV","_jsxDEV","Payments","_s","payments","setPayments","loading","setLoading","totalRevenue","setTotalRevenue","fetchPayments","res","fetch","data","json","revenue","filter","p","status","reduce","sum","Number","amount","err","console","error","studentPayments","acc","studentId","studentName","email","push","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","length","entries","map","totalPaid","latestPayment","latest","Date","createdAt","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Documents/inquiry_form/client/src/screens/Admin/AdminPayments.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// const AdminPayments = () => {\r\n//   const [students, setStudents] = useState([]);\r\n//   const [suggestions, setSuggestions] = useState([]);\r\n//   const [searchQuery, setSearchQuery] = useState(\"\");\r\n//   const [formData, setFormData] = useState({\r\n//     studentId: \"\",\r\n//     amount: \"\",\r\n//     method: \"Cash\",\r\n//     description: \"\",\r\n//   });\r\n//   const [message, setMessage] = useState(\"\");\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   useEffect(() => {\r\n//     const fetchStudents = async () => {\r\n//       try {\r\n//         const res = await axios.get(\"http://localhost:5000/api/users\");\r\n//         console.log(\"API Response:\", res.data);\r\n//         if (Array.isArray(res.data)) {\r\n//           setStudents(res.data);\r\n//         } else {\r\n//           setStudents([]);\r\n//           setMessage(\"‚ö†Ô∏è Unexpected data format from API.\");\r\n//         }\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching students:\", error);\r\n//         setMessage(\"‚ùå Failed to load students. Check console for details.\");\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n//     fetchStudents();\r\n//   }, []);\r\n\r\n//   const handleSearchChange = (e) => {\r\n//     const query = e.target.value.toLowerCase();\r\n//     setSearchQuery(e.target.value);\r\n\r\n//     if (query.length > 0) {\r\n//       const filtered = students.filter(\r\n//         (s) =>\r\n//           s.fullName?.toLowerCase().includes(query) ||\r\n//           s.email?.toLowerCase().includes(query) ||\r\n//           `${s.fullName} (${s.email})`.toLowerCase().includes(query)\r\n//       );\r\n//       setSuggestions(filtered);\r\n\r\n//       if (filtered.length === 1 && \r\n//           (filtered[0].fullName.toLowerCase() === query ||\r\n//            filtered[0].email.toLowerCase() === query ||\r\n//            `${filtered[0].fullName} (${filtered[0].email})`.toLowerCase() === query)) {\r\n//         handleSelectStudent(filtered[0]);\r\n//       }\r\n//     } else {\r\n//       setSuggestions([]);\r\n//       setFormData({ ...formData, studentId: \"\" });\r\n//     }\r\n//   };\r\n\r\n//   const handleSelectStudent = (student) => {\r\n//     setFormData({ ...formData, studentId: student._id });\r\n//     setSearchQuery(`${student.fullName} (${student.email})`);\r\n//     setSuggestions([]);\r\n//     console.log(\"Selected student ID:\", student._id); // Debug student selection\r\n//   };\r\n\r\n//   const handleChange = (e) => {\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     console.log(\"Submitting form data:\", formData); // Log form data before submission\r\n//     if (!formData.studentId || !formData.amount) {\r\n//       setMessage(\"‚ö†Ô∏è Please select a student and enter an amount.\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const res = await axios.post(\"http://localhost:5000/api/payments\", formData, {\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//       });\r\n//       setMessage(\"‚úÖ Payment recorded successfully!\");\r\n//       setFormData({\r\n//         studentId: \"\",\r\n//         amount: \"\",\r\n//         method: \"Cash\",\r\n//         description: \"\",\r\n//       });\r\n//       setSearchQuery(\"\");\r\n//     } catch (error) {\r\n//       console.error(\"Error saving payment:\", {\r\n//         message: error.message,\r\n//         response: error.response ? error.response.data : \"No response\",\r\n//         status: error.response ? error.response.status : \"No status\",\r\n//       });\r\n//       setMessage(\"‚ùå Failed to record payment. Check console for details.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={styles.container}>\r\n//       <h2>üí≥ Record Payment</h2>\r\n//       {message && <p style={styles.message}>{message}</p>}\r\n//       {loading ? (\r\n//         <p>Loading students...</p>\r\n//       ) : (\r\n//         <form onSubmit={handleSubmit} style={styles.form}>\r\n//           <div style={{ position: \"relative\", marginBottom: \"15px\" }}>\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Search student by name or email\"\r\n//               value={searchQuery}\r\n//               onChange={handleSearchChange}\r\n//               style={styles.input}\r\n//             />\r\n//             {suggestions.length > 0 && (\r\n//               <ul style={styles.suggestions}>\r\n//                 {suggestions.map((s) => (\r\n//                   <li\r\n//                     key={s._id}\r\n//                     onClick={() => handleSelectStudent(s)}\r\n//                     onMouseDown={(e) => e.preventDefault()}\r\n//                     style={styles.suggestionItem}\r\n//                   >\r\n//                     {s.fullName} ({s.email})\r\n//                   </li>\r\n//                 ))}\r\n//               </ul>\r\n//             )}\r\n//             {searchQuery.trim() !== \"\" && suggestions.length === 0 && students.length > 0 && (\r\n//               <ul style={styles.suggestions}>\r\n//                 <li style={{ padding: \"8px\", color: \"#888\" }}>\r\n//                   No students found\r\n//                 </li>\r\n//               </ul>\r\n//             )}\r\n//           </div>\r\n\r\n//           <input\r\n//             type=\"number\"\r\n//             name=\"amount\"\r\n//             placeholder=\"Enter amount\"\r\n//             value={formData.amount}\r\n//             onChange={handleChange}\r\n//             style={styles.input}\r\n//             required\r\n//             min=\"0\"\r\n//           />\r\n\r\n//           <select\r\n//             name=\"method\"\r\n//             value={formData.method}\r\n//             onChange={handleChange}\r\n//             style={styles.input}\r\n//           >\r\n//             <option value=\"Cash\">Cash</option>\r\n//             <option value=\"UPI\">UPI</option>\r\n//             <option value=\"Card\">Card</option>\r\n//             <option value=\"NetBanking\">NetBanking</option>\r\n//             <option value=\"Other\">Other</option>\r\n//           </select>\r\n\r\n//           <textarea\r\n//             name=\"description\"\r\n//             placeholder=\"Description\"\r\n//             value={formData.description}\r\n//             onChange={handleChange}\r\n//             style={styles.textarea}\r\n//           />\r\n\r\n//           <button type=\"submit\" style={styles.button}>\r\n//             Save Payment\r\n//           </button>\r\n//         </form>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// // Inline CSS\r\n// const styles = {\r\n//   container: {\r\n//     maxWidth: \"500px\",\r\n//     margin: \"20px auto\",\r\n//     padding: \"20px\",\r\n//     border: \"1px solid #ddd\",\r\n//     borderRadius: \"10px\",\r\n//     backgroundColor: \"#fafafa\",\r\n//   },\r\n//   form: { display: \"flex\", flexDirection: \"column\" },\r\n//   input: {\r\n//     padding: \"10px\",\r\n//     marginBottom: \"10px\",\r\n//     borderRadius: \"5px\",\r\n//     border: \"1px solid #ccc\",\r\n//     width: \"100%\",\r\n//     boxSizing: \"border-box\",\r\n//   },\r\n//   textarea: {\r\n//     padding: \"10px\",\r\n//     marginBottom: \"10px\",\r\n//     borderRadius: \"5px\",\r\n//     border: \"1px solid #ccc\",\r\n//     width: \"100\",\r\n//     minHeight: \"80px\",\r\n//     boxSizing: \"border-box\",\r\n//   },\r\n//   button: {\r\n//     padding: \"10px\",\r\n//     background: \"linear-gradient(to right, #6b48ff, #00c4cc)\",\r\n//     color: \"#fff\",\r\n//     border: \"none\",\r\n//     borderRadius: \"5px\",\r\n//     cursor: \"pointer\",\r\n//     fontWeight: \"bold\",\r\n//   },\r\n//   message: {\r\n//     margin: \"10px 0\",\r\n//     fontWeight: \"bold\",\r\n//     color: \"#dc3545\",\r\n//   },\r\n//   suggestions: {\r\n//     position: \"absolute\",\r\n//     top: \"100%\",\r\n//     left: 0,\r\n//     right: 0,\r\n//     border: \"1px solid #ccc\",\r\n//     backgroundColor: \"#fff\",\r\n//     borderRadius: \"5px\",\r\n//     listStyle: \"none\",\r\n//     padding: 0,\r\n//     margin: 0,\r\n//     maxHeight: \"150px\",\r\n//     overflowY: \"auto\",\r\n//     zIndex: 1000,\r\n//   },\r\n//   suggestionItem: {\r\n//     padding: \"8px\",\r\n//     cursor: \"pointer\",\r\n//     \"&:hover\": {\r\n//       backgroundColor: \"#f0f0f0\",\r\n//     },\r\n//   },\r\n// };\r\n\r\n// export default AdminPayments;\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Header from \"../../components/Header\";\r\n\r\nconst Payments = () => {\r\n  const [payments, setPayments] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [totalRevenue, setTotalRevenue] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchPayments = async () => {\r\n      try {\r\n        const res = await fetch(\"http://localhost:5000/api/payments\");\r\n        const data = await res.json();\r\n        setPayments(data);\r\n\r\n        // Calculate revenue\r\n        const revenue = data\r\n          .filter((p) => p.status === \"Completed\")\r\n          .reduce((sum, p) => sum + Number(p.amount || 0), 0);\r\n        setTotalRevenue(revenue);\r\n\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error(\"‚ùå Error fetching payments:\", err);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPayments();\r\n  }, []);\r\n\r\n  // Group payments by studentId to show latest status\r\n  const studentPayments = payments.reduce((acc, p) => {\r\n    if (!acc[p.studentId]) {\r\n      acc[p.studentId] = { payments: [], studentName: p.studentName, email: p.email };\r\n    }\r\n    acc[p.studentId].payments.push(p);\r\n    return acc;\r\n  }, {});\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <Header title=\"üí≥ Payments\" />\r\n\r\n      {/* Internal CSS */}\r\n      <style>{`\r\n        .payments-container {\r\n          background: #fff;\r\n          padding: 20px;\r\n          border-radius: 12px;\r\n          box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n          margin-top: 20px;\r\n        }\r\n        .revenue-card {\r\n          background: linear-gradient(135deg, #6c5ce7, #00cec9);\r\n          color: #fff;\r\n          padding: 20px;\r\n          border-radius: 12px;\r\n          font-size: 18px;\r\n          font-weight: bold;\r\n          margin-bottom: 20px;\r\n          text-align: center;\r\n        }\r\n        table {\r\n          width: 100%;\r\n          border-collapse: collapse;\r\n          margin-top: 15px;\r\n        }\r\n        th, td {\r\n          padding: 12px;\r\n          border-bottom: 1px solid #eee;\r\n          text-align: left;\r\n        }\r\n        th {\r\n          background: #f5f6fa;\r\n          font-weight: 600;\r\n        }\r\n        tr:hover {\r\n          background: #f9f9f9;\r\n        }\r\n        .status {\r\n          padding: 6px 10px;\r\n          border-radius: 6px;\r\n          font-size: 14px;\r\n          font-weight: bold;\r\n        }\r\n        .Completed {\r\n          background: #55efc4;\r\n          color: #2d3436;\r\n        }\r\n        .Pending {\r\n          background: #ffeaa7;\r\n          color: #636e72;\r\n        }\r\n        .Partial {\r\n          background: #fab1a0;\r\n          color: #d63031;\r\n        }\r\n      `}</style>\r\n\r\n      <div className=\"payments-container\">\r\n        <div className=\"revenue-card\">\r\n          üí∞ Total Revenue: ‚Çπ{totalRevenue}\r\n        </div>\r\n\r\n        {loading ? (\r\n          <p>‚è≥ Loading payments...</p>\r\n        ) : Object.keys(studentPayments).length === 0 ? (\r\n          <p>No payments found.</p>\r\n        ) : (\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Student</th>\r\n                <th>Email</th>\r\n                <th>Latest Status</th>\r\n                <th>Total Paid (‚Çπ)</th>\r\n                <th>Latest Date</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {Object.entries(studentPayments).map(([studentId, data]) => {\r\n                const totalPaid = data.payments.reduce((sum, p) => sum + Number(p.amount || 0), 0);\r\n                const latestPayment = data.payments.reduce((latest, p) =>\r\n                  new Date(p.createdAt) > new Date(latest.createdAt) ? p : latest\r\n                );\r\n                return (\r\n                  <tr key={studentId}>\r\n                    <td>{data.studentName || \"N/A\"}</td>\r\n                    <td>{data.email || \"N/A\"}</td>\r\n                    <td>\r\n                      <span className={`status ${latestPayment.status}`}>\r\n                        {latestPayment.status}\r\n                      </span>\r\n                    </td>\r\n                    <td>{totalPaid}</td>\r\n                    <td>{new Date(latestPayment.createdAt).toLocaleDateString()}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Payments;"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}